{
  "format_version": "hackernews-user",
  "url": "https://news.ycombinator.com/user?id=kragen",
  "id": "kragen",
  "created-timestamp": "1227744878",
  "user": "kragen",
  "created-date": "November 27, 2008",
  "karma": 30749,
  "about": "http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;",
  "submissions-link": "https://news.ycombinator.com/submitted?id=kragen",
  "comments-link": "https://news.ycombinator.com/threads?id=kragen",
  "favorites-link": "https://news.ycombinator.com/favorites?id=kragen",
  "submissions": [
    {
      "id": 37068695,
      "link": "http://canonical.org/~kragen/sw/dev3/hackonfuse/",
      "title": "Show HN: Hacker News home page spoof",
      "score": 47,
      "date": "2023-08-09T21:28:05",
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "comments_count": 22,
      "comments_link": "https://news.ycombinator.com/item?id=37068695",
      "text": ""
    },
    {
      "id": 2476538,
      "link": "http://lists.canonical.org/pipermail/kragen-discuss/2011-April/001156.html",
      "title": "An MS-DOS .COM file written entirely in printable ASCII",
      "score": 3,
      "date": "2011-04-23T09:08:09",
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "comments_count": 1,
      "comments_link": "https://news.ycombinator.com/item?id=2476538",
      "text": ""
    }
  ],
  "comments": [
    {
      "id": 41434905,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T13:47:50",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "can you not upload executables over ssh, say for policy reasons or disk-space reasons?  how about shell scripts?<p>i mean, i doubt i&#x27;m going to come up with some brilliant breakthrough that makes your life easier that you&#x27;ve somehow overlooked, but i&#x27;d like to understand what kinds of constraints people like you often confront<p>i&#x27;m just glad you don&#x27;t have to use teamviewer"
    },
    {
      "id": 41435739,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=gregjor",
        "name": "gregjor"
      },
      "date": "2024-09-03T15:13:37",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I don&#x27;t have to use TeamViewer, though I very occasionally have to use Windows RDP.<p>You can transfer any kind of file over ssh. scp, sftp, rsync will all copy binaries. Mainly the issues come down to policy and billable time. Many of my customers simply don&#x27;t allow installing <i>anything</i> on their servers without a tedious approval process. Even if I can install things I might spin my wheels trying to get it to work in an environment I don&#x27;t have root privileges on, with no one willing to help, and I can&#x27;t bill for that time. I don&#x27;t work for free to get an editor installed. I use the tools I know I can find on any Linux&#x2F;BSD server.<p>With some customers I have root privileges and manage the server for them. With others their IT dept has rules I have to follow (I freelance) if I want to keep a good relationship. Since I juggle multiple customers and environments I find it simpler not having to manage different editors and environments, so I mostly stick with the defaults. I do have a .profile and .vimrc I copy around if allowed to, that&#x27;s about it.<p>I can&#x27;t lose time&#x2F;money and possibly goodwill whining about not having everything just-so for me. I recently worked on a server over ssh that didn&#x27;t have tmux installed. Fortunately it did have screen, and I can use that too, no big deal. I spent less than 60 seconds figuring that out and getting to work rather than wasting hours of non-billable time annoying someone about how I needed tmux installed."
    },
    {
      "id": 41435867,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T15:24:59",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i see, thanks!<p>wrt rdp, i feel like rdp is actually better than vnc or x11-over-ssh, but for cases where regular ssh works, i&#x27;d rather use ssh<p>i wasn&#x27;t thinking in terms of installing tmux, more like a self-contained binary that doesn&#x27;t require any kind of &#x27;installation&#x27;"
    },
    {
      "id": 41435986,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=gregjor",
        "name": "gregjor"
      },
      "date": "2024-09-03T15:36:05",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I used the word &quot;install&quot; but the usual rule says I can&#x27;t install, upload, or execute any non-approved software. Usually that just gets stated as a policy, but I have seen Linux home directories on noexec partitions -- government agencies and big corporations can get very strict about that. So copying a self-contained binary up and running it would violate the policy.<p>I pretty much live in ssh. Remote Desktop means a lot of clicking and watching a GUI visibly repaint. Not efficient. Every so often I have customers using applications that only run on Windows, no API, no command line, so they will enable RDP to that, usually through a VPN."
    },
    {
      "id": 41436285,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T16:04:20",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i see!  but i guess your .profile and .vimrc don&#x27;t count?"
    },
    {
      "id": 41436574,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=gregjor",
        "name": "gregjor"
      },
      "date": "2024-09-03T16:33:26",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "They aren&#x27;t executables."
    },
    {
      "id": 41434891,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T13:45:53",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "you would not believe the amount of time i spent pretty-printing python dicts by hand last week"
    },
    {
      "id": 41435108,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=yen223",
        "name": "yen223"
      },
      "date": "2024-09-03T14:06:28",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "<a href=\"https:&#x2F;&#x2F;docs.python.org&#x2F;3&#x2F;library&#x2F;pprint.html\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.python.org&#x2F;3&#x2F;library&#x2F;pprint.html</a>"
    },
    {
      "id": 41435123,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T14:08:01",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah, pprint is why i was doing it by hand ;)"
    },
    {
      "id": 41435815,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=lkbm",
        "name": "lkbm"
      },
      "date": "2024-09-03T15:19:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I used to pipe things through black for that. (a script that imported black, not just black on the command line.)<p>I also had `j2p` and `p2j` that would convert between python (formatted via black) and json (formatted via jq), and the  `j2p_clip`&#x2F;`p2j_clip` versions that would pipe from clipboard and back into clipboards.<p>It&#x27;s worth taking the time to build a few simple scripts for things you do a lot. I used to open up the repl and import json to convert between json and python dicts multiple times a day, so spending a few minutes throwing together a simple script to do it was well worth the effort."
    },
    {
      "id": 41434426,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T12:44:59",
      "onstory": {
        "name": "Show HN: A modern way to type in African languages",
        "link": "https://news.ycombinator.com/item?id=41427563"
      },
      "text": "&gt; <i>aren&#x27;t most or all African writing systems based on small alphabets?</i><p>well, perhaps the most famous african writing system has a fairly large inventory of over 1000 characters, but it hasn&#x27;t been widely used for about 2000 years due to religious persecution<p>the writing systems that are most widely used in africa are the latin alphabet and the arabic abjad, but as i tiresomely repeat every time the subject comes up, africa is immensely diverse, to the point that generalizations about africa are only slightly more useful than generalizations about non-elephant mammals"
    },
    {
      "id": 41435042,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=MisterTea",
        "name": "MisterTea"
      },
      "date": "2024-09-03T14:00:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; well, perhaps the most famous african writing system has a fairly large inventory of over 1000 characters, but it hasn&#x27;t been widely used for about 2000 years due to religious persecution<p>Which is ...?"
    },
    {
      "id": 41435412,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=MrJohz",
        "name": "MrJohz"
      },
      "date": "2024-09-03T14:38:14",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I believe they&#x27;re referring to hieroglyphics, although I didn&#x27;t know the story about religious persecution and would be interested in some context there."
    },
    {
      "id": 41434383,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T12:39:04",
      "onstory": {
        "name": "Show HN: A modern way to type in African languages",
        "link": "https://news.ycombinator.com/item?id=41427563"
      },
      "text": "this was the inspiration for <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;alphanumerenglish\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;alphanumerenglish</a>, in which i would write &#x27;bro, ai dj7st wok 7p en h4d e s1k br3kfest&#x27;, because it turns out that english also has a lot of specific sounds that don&#x27;t have a direct equivalent in the latin script, and i think the solution people have been using for 1000 years in english is a lot worse than the solution arabic-speakers commonly use<p>(unfortunately i don&#x27;t even speak enough arabic to know if you&#x27;re actually writing in arabic or in a berber language like tamazight here)<p>(ai 4m ev k0rs w3l ew3r qet ref0rmi6 i6gl1c sp3l16 1z e fulz 3rend, qe d4wnfal ev m3ni en eks3ntr1k over qe sentceriz)"
    },
    {
      "id": 41433968,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:50:39",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "that&#x27;s just the core of the posting-on-hn experience.  when i&#x27;m programming i don&#x27;t try to preemptively defuse personal attacks like that, though i do try to accurately document the advantages and disadvantages of things in my comments, which often looks like &#x27;this is a fucking broken piece of shit that only works if none of the input bytes are null and takes cubic time&#x27;<p>but my motivation there isn&#x27;t to keep people from calling me an idiot.  that&#x27;s a lost cause.  it&#x27;s to save me and them time rediscovering problems i already know about"
    },
    {
      "id": 41433786,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:29:43",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "the vast majority of embedded cpus cannot run yocto or indeed linux, even the arms<p>but they all support gdb"
    },
    {
      "id": 41435478,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=milianw",
        "name": "milianw"
      },
      "date": "2024-09-03T14:46:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "True, that&#x27;s another good point. But again, this reasoning is very different to the one from the linked article and website - if you have oprofile or valgrind&#x27;s cachegrind available, you clearly could get perf setup instead.<p>I&#x27;m not debating that manual GDB sampling has its place and value. I&#x27;m debating that perf is &quot;lying&quot; or that it&#x27;s impossible to get hold of off-CPU samples, or profiling of multithreaded code in general."
    },
    {
      "id": 41435880,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T15:26:01",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yes, agreed"
    },
    {
      "id": 41435294,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T14:24:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "(well, not all)"
    },
    {
      "id": 41433773,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:28:22",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "kreinin spends a lot of time debugging things that don&#x27;t run on linux or any cpu architecture linux or vtune supports. even on amd64 linux, perf is not so useful with python, lua, node.js, browser js, shell scripts, etc."
    },
    {
      "id": 41433737,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:24:30",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "the bsd things still work; you can install a bsd in qemu or a spare laptop and try them<p>from your reference to kernel.yama.ptrace_scope (and your apparent belief that bsd belongs to the distant past) i infer that eu-stack is a linux thing?  this looks pretty awesome, thanks for the tip!<p><a href=\"https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;12394935&#x2F;getting-stacktrace-of-all-threads-without-attaching-gdb\" rel=\"nofollow\">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;12394935&#x2F;getting-stacktr...</a>"
    },
    {
      "id": 41433717,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:21:38",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "few phenomena in daily life are either quicker or dirtier than a nuclear bomb"
    },
    {
      "id": 41433698,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:19:24",
      "onstory": {
        "name": "Profiling with Ctrl-C",
        "link": "https://news.ycombinator.com/item?id=41403289"
      },
      "text": "only once you pipe the output to sort | uniq -c"
    },
    {
      "id": 41433670,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:14:25",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "posts like this sound like the author routinely solves harder problems than you are, because the solutions you suggest don&#x27;t work in the cases the post is about.  we&#x27;ve had &#x27;go to definition&#x27; since 01978 and &#x27;find usages&#x27; since 01980, and you should definitely use them for the cases where they work"
    },
    {
      "id": 41434527,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=mjr00",
        "name": "mjr00"
      },
      "date": "2024-09-03T12:59:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "From the article,<p>- dynamically built identifiers is 100% correct, never do this. Breaks both text search and symbol search, results in complete garbage code. I had to deal with bugs in early versions of docker-compose because of this.<p>- same name for things across the stack? Shouldn&#x27;t matter, just use find usages on `getAddressById`. Also easy way to bait yourself because database fields aren&#x27;t 1:1 with front-end fields in anything but the simplest of CRUD webshit.<p>- translation example: the fundamental problem is using strings as keys when they should be symbols. Flat vs nested is irrelevant here because you should be using neither.<p>- react component example: As I mentioned in another comment, trivially managed with Find Usages.<p>Nothing in here strikes me as &quot;routinely solves harder problems,&quot; it&#x27;s just standard web dev."
    },
    {
      "id": 41434871,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T13:42:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yes, i agree that standard web dev is full of these problems, which can&#x27;t be solved with go-to-definition and find-usages.  it&#x27;s a mess.  i wasn&#x27;t claiming that these messy, hard problems where grep is more helpful than etags are exotic; they are in fact very common.  they are harder than the problems lucumo is evidently accustomed to dealing with because they don&#x27;t have correct, complete solutions, so we have to make do with heuristics<p>advice to the effect of &#x27;you should not make a mess&#x27; is obviously correct but also, in many situations, unhelpful.  sometimes i&#x27;m not smart enough to figure out how to solve a problem without making a mess, and sometimes i inherit other people&#x27;s messes.  in those situations that advice decays into &#x27;you should not try to solve hard problems&#x27;"
    },
    {
      "id": 41433586,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:04:28",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "if you think anything works in 99.9999% of cases, you’ve never programmed a computer"
    },
    {
      "id": 41433561,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:01:47",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "the issue is that the c preprocessor is always available and usually used"
    },
    {
      "id": 41433852,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=skissane",
        "name": "skissane"
      },
      "date": "2024-09-03T11:38:28",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Other languages have preprocessors or macro facilities too.<p>C&#x27;s is very weak. Languages with more powerful preprocessors&#x2F;macros than C&#x27;s include many Lisp dialects, Rust, and PL&#x2F;I. If you think everyone using a weak preprocessor is bad, wait until you see what people will do when you give them a powerful one.<p>Microfocus COBOL has an API for writing custom COBOL preprocessors in COBOL (the Integrated Preprocessor Interface). (Or some other language, if you insist.) I bet there are some bizarre abominations hidden in the bowels of various enterprises based on that (&quot;our business doesn&#x27;t just run on COBOL, it runs on our own custom dialect of COBOL!&quot;)"
    },
    {
      "id": 41434069,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T12:00:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "c&#x27;s macro system is weak on purpose, based on, i suspect, bad experiences with m6 and m4. i think they thought it was easier to debug things like ratfor, tmg, lex, and (much later) protoc, which generate code in a more imperative paradigm for which their existing debugging approaches worked<p>i can&#x27;t say i think they were wholly wrong; paging through compiler error messages is not my favorite part of c++ templates.  but i have a certain amount of affection for what used to be called gasp, the gas macro system, which i&#x27;ve programmed for example to compute jump offsets for compiling a custom bytecode. and i think m4 is really a pathological case; most hairy macro systems aren&#x27;t even 10% as bad as m4, due to a combination of several tempting but wrong design decisions.  lots of trauma resulted<p>so when they got a do-over they eliminated the preprocessor entirely in golang, and compensated with reflection, which makes debugging easier rather than harder<p>probably old hat to you, but i just learned last month how to use x-macros in the c preprocessor to automatically generate serialization and deserialization code for record types (speaking of cobol): <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;binmsg_cpp.c\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;binmsg_cpp.c</a> (aha, i see you&#x27;re linking to a page that documents it)"
    },
    {
      "id": 41434108,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=skissane",
        "name": "skissane"
      },
      "date": "2024-09-03T12:05:40",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "C&#x27;s is weak yet not weak – you can do various advanced things (like conditional expansion or iteration), but using esoteric voodoo with extreme performance cost. Whereas other preprocessors let you do that using builtins which are fast and easy to grok.<p>See for example <a href=\"https:&#x2F;&#x2F;github.com&#x2F;pfultz2&#x2F;Cloak&#x2F;wiki&#x2F;C-Preprocessor-tricks,-tips,-and-idioms\">https:&#x2F;&#x2F;github.com&#x2F;pfultz2&#x2F;Cloak&#x2F;wiki&#x2F;C-Preprocessor-tricks,...</a><p>Poor C preprocessor performance has a negative real world impact, for example recently with the Linux kernel – <a href=\"https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;983965&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;983965&#x2F;</a> – a more powerful preprocessor would enable people to do those things they are doing anyway much more cheaply"
    },
    {
      "id": 41436671,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=lanstin",
        "name": "lanstin"
      },
      "date": "2024-09-03T16:43:00",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I&#x27;ve always suspected the powerful macro facilities in Lisp are why it&#x27;s never been very common - the ability to do proper macros means all the very smart programmers create code that has to be read like a maths paper.  It&#x27;s too bespoke to the problem domain and too tempting to make it short rather than understandable.<p>I like Rust (tho I have not yet programmed in it) but I think if people get too into macro generated code, there is a risk there to its uptake.<p>It&#x27;s hard for smart programmers to really believe this, but the old &quot;if you write your code as cleverly as possible, you will not be able to debug it&quot; is a useful warning."
    },
    {
      "id": 41433544,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T10:59:36",
      "onstory": {
        "name": "Greppability is an underrated code metric",
        "link": "https://news.ycombinator.com/item?id=41430772"
      },
      "text": "this thread is about using `grep` to find things, and this subthread is specifically about how the `func` keyword in golang makes it easy to distinguish the definition of a function from its uses, so <i>yes</i>, because `grep &#x27;func lart(&#x27;` will not find definitions of `lart` as a method.  you might end up with something like `grep &#x27;func .*) *lart(&#x27;` which is both imprecise and enough noise that you will not want to type it; you&#x27;ll have to can it in a script, with the associated losses of flexibility and transparency"
    },
    {
      "id": 41433722,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=medstrom",
        "name": "medstrom"
      },
      "date": "2024-09-03T11:21:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "That&#x27;s fair, I see many examples in this thread where people pass an exact string directly to grep, as you do.  I&#x27;m an avid grepper, but my grep tool [1] translates spaces to &quot;.*?&quot;, so I would just type &quot;func lart(&quot; in that example and it would work.<p>An incremental grep tool with just this one transformation rule gets you a lot more mileage out of grep.<p>[1] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;minad&#x2F;consult&#x2F;blob&#x2F;screenshots&#x2F;consult-line.png?raw=true\">https:&#x2F;&#x2F;github.com&#x2F;minad&#x2F;consult&#x2F;blob&#x2F;screenshots&#x2F;consult-li...</a><p>EDIT: Better demo <a href=\"https:&#x2F;&#x2F;jumpshare.com&#x2F;s&#x2F;zMENBSr2LwwauJVjo1wS\" rel=\"nofollow\">https:&#x2F;&#x2F;jumpshare.com&#x2F;s&#x2F;zMENBSr2LwwauJVjo1wS</a>"
    },
    {
      "id": 41433818,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:33:14",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "that&#x27;s going to find all the functions that take an argument named lart or of a lart type too, but it also sounds like a thing i really want to try"
    },
    {
      "id": 41433964,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=vitus",
        "name": "vitus"
      },
      "date": "2024-09-03T11:50:03",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Also, anything that contains &quot;func&quot; and &quot;lart&quot; as a substring, e.g. foobar(function), blart(baz).<p>It&#x27;s not far off from my manually-constructed patterns when I want to make sure I find a function definition (and am willing to tolerate some false positives), but I personally prefer fine-grained control over when it&#x27;s in use."
    },
    {
      "id": 41434100,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=medstrom",
        "name": "medstrom"
      },
      "date": "2024-09-03T12:04:38",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Mmh, I type &quot;func\\ lart(&quot; when I need the literal string.  But it&#x27;s less often, so it&#x27;s fair that it&#x27;s slightly more to type."
    },
    {
      "id": 41434156,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T12:12:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah!"
    },
    {
      "id": 41424821,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T12:18:03",
      "onstory": {
        "name": "Parsing Awk Is Tricky",
        "link": "https://news.ycombinator.com/item?id=41422283"
      },
      "text": "i very much appreciate the server surveys; for a time i read the report every month!"
    },
    {
      "id": 41424797,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T12:14:58",
      "onstory": {
        "name": "Parsing Awk Is Tricky",
        "link": "https://news.ycombinator.com/item?id=41422283"
      },
      "text": "<a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.rs\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.rs</a>, which uses no external libraries, takes 400–450ms to compile with rustc -C opt-level=1 gcd.rs (buggy program, i know).  gcc 12, which is not anyone&#x27;s idea of a fast c compiler, compiles the c equivalent <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.c\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.c</a> in 70–90ms, so the rust compiler is 300–500% slower<p>tcc, which is most people&#x27;s idea of a fast c compiler, compiles gcd.c in 8–9ms, so the rust compiler is 4300–5500% slower<p>so from my point of view &#x27;rust isn&#x27;t particularly slow to compile&#x27; is off by about an order of magnitude<p>is it as slow as c++?  well, g++ compiles the c++ version of the same code <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.cc\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;gcd.cc</a> in 460–490ms.  so in this case compiling rust is, yeah, on the order of 10% faster than compiling c++?  i feel like that&#x27;s basically the same<p>of course you can make compiling c++ arbitrarily slow with templates"
    },
    {
      "id": 41428992,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HeroicKatora",
        "name": "HeroicKatora"
      },
      "date": "2024-09-02T21:37:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I couldn&#x27;t quite replicate those numbers (rustc 1.78, gcc 14, g++ 14) with a recent state. On my machine (Ryzen 9 7900X, LVM on NVMe) it&#x27;s rustc 60-80ms, gcc 20-30ms and tcc in 2ms. Intererestingly, g++ is still 200ms on that machine. Activating time and the builtin time-passes in rustc here&#x27;s also an interesting observation: rustc spends 47ms of its time in sys and 23ms in user compared to &lt;3ms for both C variants. It counts its own time as 50ms instead for some reason, not sure what it is subtracting here. Also looking at individual passes of the compiler (rustc +nightly -C opt-level=1 -Z time-passes gcd.rs) reveals it spends 33ms linking, 16ms in LLVM and only a negligible time in what you&#x27;d consider compiling.<p>I think the test is uultimately non-sensical for the question being posed here. It doesn&#x27;t reveal anything insightful about scaling to real world program sizes, either. The time of rustc is dominated by the platform linker anyways. Sure, one might argue that this points out Rust as relying too much on the linker and creating too many unused symbols. But the question of whether this is caused by the language and in particular its syntactical choices .. should at that point be answered with probably not. It&#x27;s not a benchmark you want to compare by percentage speedups anyways since it&#x27;s probably dominated by constant time costs for any of the batteries included standard library languages compared to C."
    },
    {
      "id": 41429262,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T22:22:06",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "thank you very much for the failed replication!<p>it&#x27;s interesting, my machine is fairly similar—ryzen 5 3500u, rustc 1.63.0, luks on nvme.  is it possible that rustc has gotten much faster since 1.63?<p>while i agree that it&#x27;s not the most important test for day-to-day use, i don&#x27;t agree that it falls to the level of <i>nonsensical</i>.  how fast things are determines how you can use them.  tcc and old versions of gcc are fast enough that you could very reasonably generate a c file, compile it into a new shared object, dlopen it, and call it, every screen frame.  there are some languages, like gforth, that actually implement their ffi in such a way, and sitkack and i have both done some experiments with inline c and jit compilation by this mechanism<p>i do agree that the <i>syntactical</i> choices of the language have relatively little to do with it, and your rustc measurements provide strong evidence of that—though perhaps it is somewhat unfavorable for c++ that it commonly has to tokenize many megabytes of header files and do the moral equivalent of text replacement to implement parametric polymorphism"
    },
    {
      "id": 41432942,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HeroicKatora",
        "name": "HeroicKatora"
      },
      "date": "2024-09-03T09:19:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Thank you for re-validating the numbers on your end, it&#x27;s indeed very possible. There&#x27;s been quite a few improvements in those versions. Though the effect size does not quite fit with most of the optimizations I can recall, maybe it&#x27;s much more related to optimizations to the standard library&#x27;s size and linking behavior.<p>With regards to standard use, for many users the scenario is definitely not common. I&#x27;d rather rustc be an effective screw driver and a separate hammer be built than try to mangle both into the same tool. By that I mean, it&#x27;s very clear which portion of the compiler must be repurposed here. The hard question is whether the architecture is amenable to alternative linker backends that serve your use-case. I&#x27;m afraid I can&#x27;t answer that conclusively. Only so much, the conceptual conflict of Rust is that linkining is a very memory-safety critical part of the process. And with its compilation module model it relinks everything into the resulting binary &#x2F; library which includes a large std and dependency tree even if much of this is removed by the step. Maybe that can be changed; and relying a tool whose interface was ultimately designed with C in mind is also far from optimal to compute those outputs and inputs. It&#x27;s hard to say how much of it stems from compatibility concerns and compatibility overheads and how much is fundamental to the language&#x27;s design which could be shed for a pure build process.<p>With regards to C++, I suspect it&#x27;s rooted in the fact that parsing it requires in principle the implementation of a complete consteval engine. The language has a dependency loop between parsing and codegen. This of course, is not how data should be laid out for executing fast programs on it. It&#x27;s quite concerning given the specifications still contains the bold faced lie that &quot;The disambiguation is purely syntactic&quot; (6.8; 1) for typenames vs non-typenames to parse constructors from declarations which at the present can require arbitrary template specialization. It might be interesting to see if those two headers in your example already execute some of these dependency loops but it&#x27;s hard for me to think of an experiment to validate any of this. Maybe you have ideas, is there something like time-passes?"
    },
    {
      "id": 41433865,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T11:40:06",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "dunno. with respect to c++, you could probably hack together a c++ compiler setup that was more aggressive about using precompiled-header-like things. and if you&#x27;re trying to abuse g++ as a jit, you could maybe write a small, self-contained header that the compiler can handle quickly, and not call any standard library functions from the generated code"
    },
    {
      "id": 41427645,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=elegantlie",
        "name": "elegantlie"
      },
      "date": "2024-09-02T18:21:32",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I think you&#x27;ve struck on the actual reason: Rust programmers don&#x27;t perceive compile times as slow, and don&#x27;t really view it as a problem. Thus, nobody works on making them faster.<p>Every language has tradeoffs, and every language community has priorities. In general, the Rust community doesn&#x27;t care about compilation speed. For now, the community has basically decided that incremental cached compilations are good enough.<p>Which is fair, because there&#x27;s only so many engineering hours, and the language has a lot of other priorities that fast to compile languages like Go ignore.<p>I&#x27;m biased towards C and Go&#x27;s way of thinking about language design, which I know a lot of other people hate. But, there&#x27;s also the universal problem that once you introduce a feature into a language, people will have a field day using it in contexts where it&#x27;s not needed. Just like Perl programmers have never met a regex they&#x27;ve never disliked, and C++ programming have never heard of a bad operator overload, Rust programmer&#x27;s have never seen a bad procedural macro or external crate dependency. Showing just a little bit of restraint using complex or slow to compile language features goes a long way, but it seems like most devs (in all languages) can&#x27;t resist. Go is partially fast to compile because it just tells devs they aren&#x27;t allowed to do 90% of the slow-to-compile things that they want to do.<p>Powerful languages like Rust and C++ give devs the choice, and they almost always choose the slow-to-compile but elegant option. At least, until the build hits an hour, then they wish compile times were faster. For the record, I&#x27;m not bashing C++ or Rust, I&#x27;m a C++ developer by trade."
    },
    {
      "id": 41427772,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T18:36:17",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "haha, yes, exactly<p>probably nobody but distribution packagers and bsd committers would care about the compile time if it happened while you were editing the code"
    },
    {
      "id": 41424875,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=orwin",
        "name": "orwin"
      },
      "date": "2024-09-02T12:29:35",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; of course you can make compiling c++ arbitrarily slow with templates<p>This might be my problem :&#x2F; (template are the closest to metaprogramming I can find outside of Lisps)<p>Tbf I was mostly comparing my experience with Rust, SBCL and C++, to me it was a given that C was an order of magnitude faster (3 order of magnitude seems a bit much). I found opt-level=1 quite early and managed to feel way better about rust and let C++ go (i was toying with polynomial regressions) (I rolled my own matrix library :D never do that!)<p>Thank you for the informations."
    },
    {
      "id": 41424893,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T12:32:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah!  you can get an enormous amount of metaprogramming mileage out of c++ templates.  i think the pattern-matching paradigm embodied by sfinae is maybe a better fit for, effectively, user-defined language extensions, than the more straightforward imperative approach lisp uses by default.  but c++ templates are unnecessarily hard to debug i think, for reasons that aren&#x27;t inherent to the pattern-matching paradigm<p>i didn&#x27;t get c to compile three orders of magnitude faster, just 44×–56× faster (4400% to 5500%).  sorry to be confusing!<p>i&#x27;ve certainly experienced the temptation to roll my own matrix library more than once, and i&#x27;ll definitely have to do it at least once for the zorzpad.  i may do something this week in order to understand the simplex method better; my operations research class was years ago, and i&#x27;ve forgotten how it works, probably because i never implemented it in software, just worked through examples by hand and on the chalkboard"
    },
    {
      "id": 41425715,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=orwin",
        "name": "orwin"
      },
      "date": "2024-09-02T14:40:38",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Honestly, it was a school project, i had time and my final internship was month away, so i took the time to do it. Barely finished in time and it was quite lousy, but i was proud of it. It was my peak &quot;Dunning-Kruger&quot;, because i was probably the most mathematically-inclined of all my classmates, and thought i was really clever.<p>Funny stuff, during my final internship i made a heavy use of scikit-image, learned about openBlas and unterstood how much better low-level libraries were for matrix computation, and how far away my own library was. And at my next job i was setting up our PaaS VMs with a lot of stuff, including TitanX with Cuda and pytorch, informed myself on the tools i was installing (i did set up tutorials in notebooks for an easy launch), and then understood i was years behind and way less informed than i thought i was. I think i learned about HN around that time."
    },
    {
      "id": 41424622,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T11:47:29",
      "onstory": {
        "name": "The Pentium as a Navajo Weaving",
        "link": "https://news.ycombinator.com/item?id=41418301"
      },
      "text": "this sounds awesome!  do you have drawings?"
    },
    {
      "id": 41430204,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Taniwha",
        "name": "Taniwha"
      },
      "date": "2024-09-03T01:06:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Yes, I&#x27;m at the cut cartoon stage, just choosing glass it&#x27;s a long thin panel so I needed a design of about the same shape - what I&#x27;m building (actually a full adder, I misspoke above) looks a lot like the design on page 5 here<p><a href=\"https:&#x2F;&#x2F;www.cerc.utexas.edu&#x2F;~jaa&#x2F;vlsi&#x2F;lectures&#x2F;8-1.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.cerc.utexas.edu&#x2F;~jaa&#x2F;vlsi&#x2F;lectures&#x2F;8-1.pdf</a>"
    },
    {
      "id": 41422844,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T05:28:42",
      "onstory": {
        "name": "Unix history and the `dc` calculator",
        "link": "https://news.ycombinator.com/item?id=41420744"
      },
      "text": "postfix notation only needs a stack of numbers, it&#x27;s shallower, and it does one operation per token.  zuse&#x27;s z3 didn&#x27;t have much memory or complex control logic<p>when you have said<p><pre><code>   * + 3 4 - 5</code></pre>(assuming dyadic operators) you have a stack containing an operator, a computed result, another operator, and an entered operand.  when you complete the expression with<p><pre><code>    6</code></pre>the computation of the result, -1, should trigger the lurking multiplication.  the machine&#x27;s sequencing is state-dependent<p>by contrast, in<p><pre><code>    3 4 + 5 6 - *</code></pre>there are never more than three things on the stack in this expression, operators are never on the stack, and no input ever triggers more than one operation.  from a user interface perspective, the user also gets faster feedback<p>i just wrote a command-line postfix calculator in c on my cellphone touchscreen in 20 minutes. it&#x27;s 31 lines of code. i think that to do that so simply with prefix you have to do it right to left, effectively making it postfix"
    },
    {
      "id": 41422811,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T05:18:51",
      "onstory": {
        "name": "Unix history and the `dc` calculator",
        "link": "https://news.ycombinator.com/item?id=41420744"
      },
      "text": "well, they are. it&#x27;s like reading keyboard macros. btw i think you meant to \\ your *s"
    },
    {
      "id": 41426786,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=bawolff",
        "name": "bawolff"
      },
      "date": "2024-09-02T16:33:09",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Oh, you are correct. Hn ate the formatting. The example is stolen from wikipedia. Lets try that again:<p>dc -e &#x27;_640320[0ksslk3^16lkd12+sk*-lm*lhd1+sh3^&#x2F;smlxlj*sxll545140134+dsllm*lxlnk&#x2F;ls+dls!=P]sP3^sj7sn[6sk1ddshsxsm13591409dsllPx10005v426880*ls&#x2F;K3-k1&#x2F;pcln14+snlMx]dsMx&#x27;"
    },
    {
      "id": 41422798,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T05:16:50",
      "onstory": {
        "name": "Unix history and the `dc` calculator",
        "link": "https://news.ycombinator.com/item?id=41420744"
      },
      "text": "i&#x27;m running gforth under termux on android.  i just ran a video game on it earlier tonight, this one i wrote last month<p>do you have a screencast of your calculator&#x27;s user interface? it sounds interesting!"
    },
    {
      "id": 41424593,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=lolinder",
        "name": "lolinder"
      },
      "date": "2024-09-02T11:44:01",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I don&#x27;t, but it&#x27;s pretty simple: it looks like a regular calculator, but instead of having a single line for the number it has a line for building a number and then a scrolling text box that shows the stack [0]. There&#x27;s an enter button that moves a number from the construction line to the stack, or you can hit any of the operation keys to implicitly use the under-construction number as the top of the stack. If no number is under construction it uses the top two numbers as the operands.<p>Short tap on the stack swaps the top two stack items, long press rolls the top three. If I were doing it again I&#x27;d have long press roll the entire stack (top becomes bottom, the rest move up)—since it&#x27;s all visible and I&#x27;m not programming it this would actually be more useful.<p>[0] On my phone at the time I wrote it this box had room for three numbers before scrolling. Now it has 12..."
    },
    {
      "id": 41424858,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T12:25:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i see!  given your forth comment, i&#x27;m sort of surprised you didn&#x27;t have <i>r&gt;</i> and <i>&gt;r</i> keys to move numbers between the stacks<p>i feel like on a multitouch screen we ought to be able to tap on numbers to <i>roll</i> them to the top of the stack"
    },
    {
      "id": 41425027,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=lolinder",
        "name": "lolinder"
      },
      "date": "2024-09-02T12:59:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Yeah, there are definitely things to improve, but it&#x27;s good enough for my use! Keep in mind that the phone I wrote this for had a 3–4&quot; screen—there was barely room for one three-item stack, and no room at all for a return stack even if I wanted one.<p>Oh, yeah, what I&#x27;m calling Roll is actually Rot in Forth."
    },
    {
      "id": 41425413,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T13:56:45",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i think for this kind of thing it makes sense to pop up a low-pass-filtered translucent numeric entry keyboard on top of the values being displayed, the way touchscreen controls for games like fortnite and minetest work (check out handcam streamer videos on youtube if you haven&#x27;t seen this).  then you can use the whole display to display the numbers you&#x27;re working on, so a 3–4&quot; screen (4000mm²?) can display dozens of numbers.  maybe the numeric entry keyboard should only be open while you&#x27;re holding down a numeric-entry button with your other thumb, but anyway it shouldn&#x27;t occupy screen real estate; it should overlay screen real estate<p>you called two different things &#x27;roll&#x27;; one of them is indeed <i>rot</i> in forth but the other is <i>depth 1- roll</i>"
    },
    {
      "id": 41422521,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T04:14:14",
      "onstory": {
        "name": "The Pentium as a Navajo Weaving",
        "link": "https://news.ycombinator.com/item?id=41418301"
      },
      "text": "dobbies automated looms before that"
    },
    {
      "id": 41425357,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=OogieM",
        "name": "OogieM"
      },
      "date": "2024-09-02T13:47:55",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "dobby looms are an automated version of draw looms. Some use a draw boy, small child in the loom itself to draw up the warps as required for the patter. Later shortened to dobby."
    },
    {
      "id": 41422473,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T04:03:39",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "&gt; <i>If your department heads are not your most skilled operators, then... maybe that&#x27;s a good problem to fix.</i><p>department heads spend all their time organizing groups of people. if organizing people better is your company&#x27;s competitive advantage, then sure, putting your best people in those seats is probably best. but if your company&#x27;s competitive advantage is that it makes better optical instruments, produces gasoline more cheaply, demolishes buildings more safely, or makes better-tasting food—you&#x27;d better let your best operators spend a lot of their time grinding mirrors, operating refineries, annotating floor plans, or cooking.  if they spend all their time organizing people, your company will lose its competitive advantage"
    },
    {
      "id": 41417555,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T15:06:43",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "you&#x27;re describing societies, not companies. societies rely on forms of collaboration that are more resilient than delegated authority. liberals often point out markets—i don&#x27;t have to depend on the goodwill of the butcher and baker, etc.—but other forms like charity, science (including open-source software), and reputation systems are also crucial to enabling nyc to exist<p>delegated authority is fragile in the face of people making mistakes or just prioritizing their own interests over the interests of the group—as people often do. markets, published reproducible experiments, generosity, and gossip also suffer from those, of course, but they&#x27;re better at self-correcting"
    },
    {
      "id": 41417473,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T14:57:37",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "are we talking about steve jobs here? iphone in the fishtank steve jobs? roundrects are everywhere steve jobs? because that sounds pretty close to telling ics how to solve a problem"
    },
    {
      "id": 41417455,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T14:55:22",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "henry ford was also pretty far from this warren buffett mode of letting the upper management of the company do what they want.  very deeply involved in every level of the company, much like steve jobs"
    },
    {
      "id": 41417378,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T14:46:19",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "pubmed centrals?  politico-media complexes?"
    },
    {
      "id": 41420470,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=guccii",
        "name": "guccii"
      },
      "date": "2024-09-01T21:17:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "professional managerial class"
    },
    {
      "id": 41422022,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T02:04:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "aha, thanks"
    },
    {
      "id": 41417258,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T14:29:57",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "&#x27;individuals who consistently meet expectations&#x27; is not only not the same thing as &#x27;superstars&#x27;, it&#x27;s nearly the opposite. doing the unexpected is a defining attribute of superstars. an individual who consistently meets expectations is incapable of simultaneously being a superstar. they must exceed them, and to an astounding degree, to qualify as a &#x27;superstar&#x27; by any normal definition of the word<p>many superstars aren&#x27;t even good at doing the expected when it would be a good idea, often because of drug addictions<p>this happens for two reasons. one is that if you&#x27;re selecting people along two axes, the more harshly you select on one axis, the less candidates remain to select along the other, unless the axes are perfectly correlated.  the other is that, whether you&#x27;re a candidate selecting strategies or a judge selecting candidates, two axes along which you can select are mean and variance. in any event where you take the best of multiple trials, the top performers will almost always have high variance, not just a high mean"
    },
    {
      "id": 41417732,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=detourdog",
        "name": "detourdog"
      },
      "date": "2024-09-01T15:30:39",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The only difference between what you wrote and what I wrote is that you removed the first filter and critiqued my comment becuase the second filter failed.<p>The ability to pay attention is where the unexpected comes from in my judgement. The whole world looks at something and tunes out early because they think they understand. An individual that is truly paying attention notices all the subtleties that that can be used for a fresh solution.<p>My point is that an inconsistent superstar is not as good as an individual with a consistently fresh solution.<p>Going out one more layer I thought the topic was how to have a stable organization with consistently fresh thinking. I responded to a topic discussing how to attract superstars. I believe anyone has the capability of being a superstar in the right environment."
    },
    {
      "id": 41417903,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T15:53:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i mostly agree with your first filter, but your second filter excludes all superstars, turning your comment into nonsense as a whole<p>whether &#x27;an inconsistent superstar is not as good as an individual with a consistently fresh solution&#x27; depends on the situation.  if you&#x27;re in a situation where that&#x27;s true, you&#x27;re not looking for superstars, and you shouldn&#x27;t try to intrude your decision criteria into discussions about people who are<p>&gt; <i>I believe anyone has the capability of being a superstar in the right environment</i><p>that&#x27;s, i&#x27;m sorry, just bullshit.  the wrong environment can prevent you from being a superstar—imagine if madonna had been born before recorded music, or in taliban-governed afghanistan—but the reverse is obviously false. no environment could have converted me, this body, into madonna or messi or jimi hendrix or bruce lee or meryl streep or jeff dean.  that&#x27;s pure wishful thinking<p>i don&#x27;t think the discussion is about how to have a stable organization of any kind. it&#x27;s about how a startup can kick ass. to what extent stability promotes that is a point under debate, not a premise we have stipulated. i can tell you that there is some degree of chaos that makes kicking ass impossible, but from experience, it can be remarkably high, and stability inevitably trades off against chasing superstars.  that&#x27;s because superstars are unpredictable by nature—not just when they fail but also when they succeed!  a new product line that obsoletes everything your startup has done so far is a <i>lot</i> of instability, and it&#x27;s what you are hoping for if you are trying to hire superstars in a startup<p>ignoring that is just self-deception, and trying to impose obviously ridiculous redefinitions on the conversation in order to cover it up doesn&#x27;t do the discussion any service.  if you want to argue that chasing superstars is a dumb idea, which is a reasonable point of view and correct in many situations, then make that argument—don&#x27;t try to redefine common terms to conceal the disagreement"
    },
    {
      "id": 41418311,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=detourdog",
        "name": "detourdog"
      },
      "date": "2024-09-01T16:47:26",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I disagree superstars are human one should expect failures from humans."
    },
    {
      "id": 41424380,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T11:10:24",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i can&#x27;t parse that"
    },
    {
      "id": 41417172,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T14:20:30",
      "onstory": {
        "name": "Founder Mode",
        "link": "https://news.ycombinator.com/item?id=41415023"
      },
      "text": "what&#x27;s the url?  usually pg thinks lisp knowledge makes people more likely to succeed, not less"
    },
    {
      "id": 41417291,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=wahnfrieden",
        "name": "wahnfrieden"
      },
      "date": "2024-09-01T14:34:18",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "<a href=\"https:&#x2F;&#x2F;paulgraham.com&#x2F;hijack.html\" rel=\"nofollow\">https:&#x2F;&#x2F;paulgraham.com&#x2F;hijack.html</a><p>&gt; By promoting themselves from data to code, hijackers on September 11th promoted box-cutters into 400,000 lb. incendiary bombs<p>Published September 2001"
    },
    {
      "id": 41420463,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kazinator",
        "name": "kazinator"
      },
      "date": "2024-09-01T21:17:05",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "That doesn&#x27;t say anything like that Lisp knowledge could have prevented the attacks. It does say that reasoning similar to reasoning about computer systems security could have led to better aircraft security.<p>The code&#x2F;data rhetoric is not exclusively an earmark of Lisp. A primary concern in security are situations in which what is intended to be data allows for a surprising malicious use whereby it effectively becomes a way to program behaviors into the software which processes the data.<p>For instance, Winamp being exploited by loading a specially crafted MP3 playlist file is an instance of data becoming code; no Lisp in sight. Code being a flipside of data, in the context of security, is simply the consequence of the Von Neumann model.<p>Graham is arguing for compartments; exactly why we use containers and such. The main idea is that the passenger cabin should be sandboxed away from the cockpit, which isn&#x27;t earth-shattering.<p>Where he mentions Lisp is this:<p><i>&gt; The defense that does work is to keep code and data in separate places. Then there is no way to compromise code by playing tricks with data. Garbage-collected languages like Perl and Lisp do this, and as a result are immune from buffer overflow attacks.</i><p>This point seems bungled. Garbage collection is no panacea. Bugs in a garbage collected run-time can expose applications to exploitable attacks. The advantage in Perl and Lisp is that the application programmer is not writing low-level buffer manipulation routines from scratch. That stuff is in the language run time, where we debug the low-level implementation code once, and have thousands of applications use the debugged thing. If a hole is found, we fix it once, and close the issue in thousands of apps once they upgrade to the new run-time.<p>Garbage collected languages do not necessarily keep code and data in separate places. Moreover, non-garbage-collected languages do that.  The C language can easily be implemented in a conforming manner such that the data areas (automatic storage (a.k.a. stack) and dynamic (malloc) are not executable. C keeps code and data separate. Functions are not objects. In some C implementations, like certain DSP chips, functions are in a separate space; you cannot cast a function pointer to char * and access the function image, because the resulting pointer will be interpreted in a different memory area.  Of course, C data can contain pointers to functions, which can be redirected if overwritten.<p>Lisp data can also contain function pointers: e.g. a closure object with a pointer to code and to an environment. If that is stored in a heap somewhere where an array is also stored, and the run-time has a bug which allows array overrun, it could perhaps be exploited."
    },
    {
      "id": 41422120,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T02:24:53",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "agreed<p>as you know, though, there <i>is</i> a connection between this kind of security and garbage collection.  specifically, if you&#x27;re using a language that bounds-checks all array accesses, so array overruns are impossible, but relies on that same application programmer to free pointers manually, you can have a use-after-free bug, where a function pointer is written into heap space previously occupied by an array (or other data structure) to which a pointer still exists.  if the attacker can cause writes to happen via that pointer, they can still break your security<p>garbage collection is a perfect guarantee against use-after-free bugs, unless of course the garbage collector is buggy.  it&#x27;s not the only possible solution; alternative solutions include statically allocating everything (abjuring dynamic allocation completely, like cobol), linear typing, never deallocating anything, and mlkit&#x27;s region-based memory allocation are some alternatives which have been used.  garbage collection is the most popular and probably the most practical<p>so it&#x27;s not just that we have thousands of applications use the same debugged low-level buffer manipulation routines.  it&#x27;s also that we have thousands of applications use the same debugged garbage collector<p>i want to point out that even without having code and data in the same memory space, there are a variety of things an attacker may be able to do.  when non-executable stacks, aslr, and w^x protections started being implemented, attackers started returning into libc; function pointers that point into the middle of libc would work just as well. (return-oriented programming might be more difficult, unless the thing being used-after-freeing was a large stack-allocated variable, which would be unusual.)  and of course if there are shell commands, sql commands, java bytecode, or the like in data memory, overwriting them with malicious data may be just as good as uploading malicious machine code"
    },
    {
      "id": 41417650,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T15:16:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "aha, this is awesome! and indeed the solution he suggests (locking the cockpit door) is the only one of the various security measures put in place to prevent a recurrence that is generally agreed to have been effective rather than just security theater<p>i want to give pg a lot of credit for clear thinking here, but of course if he&#x27;d suggested locking cockpit doors in august 02001 instead of september, that would have been significantly more impressive<p>your original summary of <a href=\"https:&#x2F;&#x2F;paulgraham.com&#x2F;hijack.html\" rel=\"nofollow\">https:&#x2F;&#x2F;paulgraham.com&#x2F;hijack.html</a>  was not correct"
    },
    {
      "id": 41417835,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=wahnfrieden",
        "name": "wahnfrieden"
      },
      "date": "2024-09-01T15:44:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Thanks for explaining my link back to me"
    },
    {
      "id": 41417910,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T15:54:32",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "sure, i hope it helped you understand it.  thanks for the link! i don&#x27;t remember if i read it at the time or not"
    },
    {
      "id": 41414286,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T04:25:37",
      "onstory": {
        "name": "Iron as an inexpensive storage medium for hydrogen",
        "link": "https://news.ycombinator.com/item?id=41406669"
      },
      "text": "agreed.  there are a fairly wide range of possible hydrogen storage forms like this (ammonia, carbohydrate, hydrazine, metal hydrides) but paraffin has many practical advantages.  possibly aluminum (without any actual hydrogen, similar to the iron in the article) is superior, due to lower weight and higher round-trip efficiency, but possibly not.  i think we can take widespread fischer-tropsch fuels for granted as part of the transition to renewable energy"
    },
    {
      "id": 41414245,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T04:16:57",
      "onstory": {
        "name": "Iron as an inexpensive storage medium for hydrogen",
        "link": "https://news.ycombinator.com/item?id=41406669"
      },
      "text": "or you can maybe skip the hydrogen intermediary on one end and burn the iron in an iron-air battery.  then you get much higher efficiency. electrowinning of iron in alkali is also feasible, eliminating the hydrogen on both ends"
    },
    {
      "id": 41414255,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=hollerith",
        "name": "hollerith"
      },
      "date": "2024-09-01T04:18:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "But then you have to keep on adding iron, which might be costlier than hydrogen. And you have to keep on removing iron oxide."
    },
    {
      "id": 41414306,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T04:32:37",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "well, adding iron and removing iron oxide is what electrowinning iron does, but i think i added that part of my comment after you made yours.  but you can still add iron and remove iron oxide with the hydrogen smelting furnace the ethz researchers devised if you like that better"
    },
    {
      "id": 41414234,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T04:14:52",
      "onstory": {
        "name": "Iron as an inexpensive storage medium for hydrogen",
        "link": "https://news.ycombinator.com/item?id=41406669"
      },
      "text": "single-use instant hand warmers are catalyzed by salt and a little water.  iron powder is indeed hazardous by itself but not like that"
    },
    {
      "id": 41413960,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T03:12:45",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "alcorn?"
    },
    {
      "id": 41415613,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=bsenftner",
        "name": "bsenftner"
      },
      "date": "2024-09-01T10:02:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Allan Alcorn, American electrical engineer and computer scientist, is an American pioneering engineer and computer scientist best known for creating Pong, one of the first video games"
    },
    {
      "id": 41416842,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T13:30:00",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah, i know him. not acorn"
    },
    {
      "id": 41413950,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T03:10:53",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "oh wow, this is awesome, thanks!  i never realized!"
    },
    {
      "id": 41412424,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T22:10:16",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "usually this is correct, but there are some exceptions.  most instructions on a non-pipelined but synchronous stack machine like the mup21 take a single cycle, for example<p>even with a register file, it isn&#x27;t really inherent that you need to decode inputs, do alu operations, and write outputs in separate clock cycles; you can do all of that in combinational logic except writing the outputs, and you can even decode which register to write the output to.  it just means your max clock rate is in the toilet<p>for that kind of thing a harvard architecture is pretty useful; it allows you to read an instruction in instruction memory at the same time you&#x27;re reading or writing data in data memory, instead of in two separate cycles"
    },
    {
      "id": 41412354,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T22:01:34",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "&gt; <i>few CPUs execute all instructions in the same amount of time. Division, for example, still takes longer than a register move on most architectures</i><p>easy solution, as you allude to, don&#x27;t have a division instruction!  arm doesn&#x27;t, 8048 doesn&#x27;t, sparcv7 doesn&#x27;t, even the cdc 6600 and cray-1 didn&#x27;t, and even risc-v finally got zmmul: <a href=\"https:&#x2F;&#x2F;wiki.riscv.org&#x2F;display&#x2F;HOME&#x2F;Zmmul\" rel=\"nofollow\">https:&#x2F;&#x2F;wiki.riscv.org&#x2F;display&#x2F;HOME&#x2F;Zmmul</a>.  it&#x27;s not just dsps<p>the big issue with complex addressing modes is i think fault handling.  if your nice orthogonal <i>add</i> instruction updates two registers as it reads operands and a third register with the sum of the operands, what do you do if you get a page fault on the second operand?  if the os can service the page fault, how does it restart the instruction?<p>as you point out, real-time latency is also an issue.  on older arm chips you have to be careful not to ldm or stm too many registers in a single instruction so as not to damage interrupt latency.  newer arm chips can restart the ldm&#x2F;stm<p>i&#x27;m no expert on the area either"
    },
    {
      "id": 41413726,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ack_complete",
        "name": "ack_complete"
      },
      "date": "2024-09-01T02:26:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; don&#x27;t have a division instruction! arm doesn&#x27;t, 8048 doesn&#x27;t<p>Heh, that&#x27;s an understatement. The 8048 doesn&#x27;t even have a <i>subtract</i> instruction, much less divide."
    },
    {
      "id": 41413858,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-01T02:54:09",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "cpl add cpl was good enough for my daddy and it&#x27;s good enough for me"
    },
    {
      "id": 41412307,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T21:53:05",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "my limited experience with stack machines is that a stack mip is about half a register-machine mip :-(<p>consider this simple assembly-language subroutine i wrote in october (<a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;tetris.S\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;tetris.S</a>, screencast at <a href=\"https:&#x2F;&#x2F;asciinema.org&#x2F;a&#x2F;622461\" rel=\"nofollow\">https:&#x2F;&#x2F;asciinema.org&#x2F;a&#x2F;622461</a>):<p><pre><code>            @@ Set sleep for iwait to r0 milliseconds.            @@ (r0 must be under 1000)            .thumb_func    waitis: ldr r2, =wait           @ struct timeval            movs r3, #0             @ 0 sec            str r3, [r2]            @ .tv_sec = 0            ldr r1, =1000           @ multiplier for ms            mul r0, r1            str r0, [r2, #4]        @ set .tv_usec            bx lr            .bss    wait:   .fill 8                 @ the struct timeval            .text</code></pre>these are all perfectly normal register-machine instructions; you could translate them one-to-one to almost any register machine.  on a few of them you could drop one, writing something like str #0, [wait].  the whole function is straight-line execution, a single basic block, and seven instructions long.  this is almost a best case for a stack machine; it looks like this:<p><pre><code>    lit(0)      ; load immediate constant    lea(wait)   ; load address of wait onto stack    !           ; store 0 in wait    lit(1000)   ; another constant    *           ; multiply argument by constant    lea(wait)   ; load address again    lit(4)      ; offset of .tv_usec    +           ; calculate address of wait.tv_usec    !           ; store product in tv_usec    ret         ; return from subroutine </code></pre>that&#x27;s 10 instructions, about 50% longer than the 6 or 7 of the two-operand register machine.  but the typical case is worse.  and basically the reason is that the average number of stack manipulations or constant pushes that you need to do to get the right operands on top of the stack for your memory accesses and computational operations is roughly 1.  sometimes you&#x27;ll have a * or ! (store) or + that&#x27;s not preceded by a stack manipulation or a load-immediate or a load-address operation, and that time the stack machine wins, but other times it&#x27;ll be preceded by two or three of them, and that time the stack machine loses<p>so it averages out to about two stack instructions per register-machine instruction.  call and return is faster on the stack machine, but passing arguments and return values in registers on the register machine can take away most of that advantage too<p>the rtx-2000 did some tricks to sometimes do more than a single stack operation per cycle, but it didn&#x27;t really escape from this<p>this doesn&#x27;t <i>necessarily</i> mean that stack machines like the rtx-2000 are a bad design approach!  the design rationale is that you get very short path lengths, so you can clock the design higher than you could clock a design that had register-file muxes in the critical path, and you also avoid the branching penalty that pipelines impose on you, and you use less silicon area.  mainstream computation took a different path, but plausibly the two-stack designs like the rtx-2000, the novix nc4000, the shboom, the mup21, and the greenarrays f18a could have been competitive with the mainstream risc etc. approach.  but you do need a higher clock rate because each instruction does less<p>i don&#x27;t remember if dr. ting wrote a book about the rtx-2000, but he did write a very nice book about its predecessor the nc4000, going into some of these tricks: <a href=\"https:&#x2F;&#x2F;www.forth.org&#x2F;OffeteStore&#x2F;4001-footstepsFinal.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.forth.org&#x2F;OffeteStore&#x2F;4001-footstepsFinal.pdf</a>"
    },
    {
      "id": 41412298,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T21:52:31",
      "onstory": {
        "name": "Bresenham&#x27;s Circle Drawing Algorithm (2021)",
        "link": "https://news.ycombinator.com/item?id=41405243"
      },
      "text": "no, you&#x27;re right, you almost always need pipelining to get one instruction per clock cycle<p>but there are a <i>lot</i> of cpus out there—maybe the majority now—that are pipelined microarchitectures that get one instruction per cycle without much or any prediction.  avrs, most of the cortex-m* (all?), most modern implementations of old slow isas like the z80 and 8051, etc.  big processors like your laptop cpu and cellphone cpu are of course superscalar, but they are a tiny minority of all processors.  even inside the cellphone case, they&#x27;re outnumbered by in-order scalar microcontrollers<p>without prediction, of course, you have a pipeline bubble every time you have a branch, so you never quite hit 1 ipc with scalar execution.  but it&#x27;s usually pretty close, and  even with prediction, sometimes you miss.  and usually if you have branch prediction, you also have a cache, because ain&#x27;t nobody got time to share one triflin memory bus between instructions and data<p>so pipelining gets you from, say, 3 clocks per instruction down to 1.2 or so.  then prediction gets you from 1.2 down to, say, 1.02"
    },
    {
      "id": 41410916,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T18:47:25",
      "onstory": {
        "name": "Did your car witness a crime?",
        "link": "https://news.ycombinator.com/item?id=41409882"
      },
      "text": "you could report anyone you disliked, as long as you could find out what their car looked like, even if they weren&#x27;t speeding or running reds etc.  convincingly editing the traffic light color in a video doesn&#x27;t even require artificial neural networks.  trump voters in progressive communities, for example, or progressive voters in right-wing communities"
    },
    {
      "id": 41397603,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-30T03:57:11",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "caymanjim knows his units, but the general public is so ignorant that it&#x27;s common to hear people confusing a 1200-amp-hour battery with a 1200-(cold-cranking-)amp battery.   even people who built a multi-voltage electrical system for their rv.  the struggle is real"
    },
    {
      "id": 41397591,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-30T03:53:19",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "i very much appreciate you sharing your knowledge!"
    },
    {
      "id": 41397583,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-30T03:50:09",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "you just need to drill 60 meters down: <a href=\"https:&#x2F;&#x2F;ca.water.usgs.gov&#x2F;mojave&#x2F;mojave-morongo-hydrographs.html\" rel=\"nofollow\">https:&#x2F;&#x2F;ca.water.usgs.gov&#x2F;mojave&#x2F;mojave-morongo-hydrographs....</a><p>once you&#x27;re established you can collect rainwater.  <a href=\"https:&#x2F;&#x2F;ca.water.usgs.gov&#x2F;mojave&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;ca.water.usgs.gov&#x2F;mojave&#x2F;</a> says:<p>&gt; <i>Most areas of the basin floor receive 4 to 6 inches of precipitation per year, although annual precipitation can be greater than 40 inches in the southern and eastern San Bernardino and the San Gabriel Mountains (Lines, 1996). Recharge to the groundwater system from direct infiltration of precipitation is minimal.</i><p>in modern units &quot;4 inches&quot; is 100 millimeters, so that&#x27;s about 3 nanometers per second<p>each person needs about 6 liters of water per day (burning man recommendation, including hygiene, dishwashing, etc., but not garden irrigation) or 70 microliters per second. 70 microliters divided by 3 nanometers is about 20 square meters, so even in the desert you don&#x27;t need a large catchment to keep your cistern full.  this isn&#x27;t the atacama<p>if you want to be far from civilization in america, though, the atacama is pretty good for that.  parts of patagonia might be better and do have rain"
    },
    {
      "id": 41396186,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:53:34",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "well, given that the solar luminosity is 3.8 × 10²⁶ watts, the milky way galaxy contains about 2 × 10¹¹ stars, of which ¾ are red dwarfs and so about 5 × 10¹⁰ are sunlike stars, probably our glorious renewable energy future perfect economy will use about 2 × 10³⁵ watts.  current world marketed energy consumption is about 19 terawatts (1.9 × 10¹³ watts) so that&#x27;s about 10²²× more than at present, not 4× or 6×<p>unless the humans die out as yet another sad single-planet species"
    },
    {
      "id": 41395896,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:19:57",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "&gt; <i>To light the factories, more energy used to correlate with more light, until we swap out the incandescent&#x2F;halogen lighting sources for LEDs</i><p>this is nonsense.  lighting hasn&#x27;t been a significant fraction of the energy usage of factories since they switched from being lighted by fireplaces to gaslighting.  not in 02024, not in 01974, not in 01924, not in 01874<p>&gt; <i>Seems that measuring [gdp] growth by energy consumption is like Bill Gates&#x27; famous example</i><p>it&#x27;s true that higher efficiency is better, of course, but your comment embeds the false assumption that higher energy efficiency reduces energy use.  in fact, higher energy efficiency usually <i>increases</i> energy use, because it increases the scope of things to which marketed energy can be economically applied more than it reduces the use of marketed energy for things it was already being used for.  (this is the well-known jevons paradox mentioned in <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41392248\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41392248</a>).  so, even today, it turns out that the countries with the lowest gdp and lowest energy use also have the lowest energy efficiency<p>similarly, using high-level languages reduces the number of lines of code to implement some given functionality; but you would be completely mistaken if you used that fact to predict that the vast majority of programmers spend their time writing assembly language instead of python because python requires one twentieth of the code to do whatever.  many things are done with python not just because companies writing python outcompete companies writing assembly, but also because programs that would be unprofitable to write in assembly language become profitable to write when you can write them in high-level languages!"
    },
    {
      "id": 41395822,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:11:53",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "thank you!  this looks highly relevant to my interests"
    },
    {
      "id": 41395797,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:09:16",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "this is awesome!<p>i do have one quibble, though, and it&#x27;s a big one.  in the last two years, prices on mainstream solar panels (monocrystalline with warranty) have fallen from €0.25 per peak watt to €0.12 per peak watt; low-cost panels have fallen from €0.17 per peak watt to €0.07 per peak watt.†  technically that <i>is</i> &#x27;fallen by 25% or more&#x27; because it&#x27;s fallen by almost 60%.  2400 watts of solar should cost you 290 us dollars plus retail markup, not 1200 dollars.  if you&#x27;re paying 1200 dollars, you&#x27;re being swindled!  <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41394506\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41394506</a> goes into details on how the swindle works<p>______<p>† <a href=\"https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preisindex&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preis...</a>"
    },
    {
      "id": 41395864,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=caymanjim",
        "name": "caymanjim"
      },
      "date": "2024-08-29T22:16:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "400W solar panels cost $200-250. So 2400W will cost me roughly $1800. There are discounts if you can buy in bulk, but I don&#x27;t have room for more than 6-8 panels at most.<p>Like all things, the raw material cost is trivial. There are the tariffs you mention (I just skimmed your link, and don&#x27;t speak German), but there&#x27;s also economy of scale, packaging, logistics, etc. I&#x27;m sure I could get 400W panels for as little as $100&#x2F;ea if I went to the factory myself and bought hundreds of them. Maybe even cheaper. It&#x27;s not really fair to compare consumer one-off costs to industrial&#x2F;commercial-scale installation costs."
    },
    {
      "id": 41396269,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=aaron42net",
        "name": "aaron42net"
      },
      "date": "2024-08-29T23:06:03",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Will Prowse&#x27;s favorite large panels are cheaper than that, including a 370w bifacial for $111 each in small quantities: <a href=\"https:&#x2F;&#x2F;signaturesolar.com&#x2F;all-products&#x2F;solar-panels&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;signaturesolar.com&#x2F;all-products&#x2F;solar-panels&#x2F;</a><p>Related video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=v33nbi7gKcY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=v33nbi7gKcY</a>"
    },
    {
      "id": 41396434,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T23:33:42",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "that&#x27;s great, only 2½× the wholesale prices on solarserver!<p>is that available in the usa?  because the swindle that caymanjim is being subjected to is kind of a usa-only thing"
    },
    {
      "id": 41397858,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=technofiend",
        "name": "technofiend"
      },
      "date": "2024-08-30T05:02:39",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Before you purchase anything try A1 solar.  They often have deep discounts on single panels as well as container lots. For instance they have a 440 Watt panel priced at $140, six of which would get you 2,640 watts @ $840. <a href=\"https:&#x2F;&#x2F;a1solarstore.com&#x2F;solar-panels&#x2F;440-watt-solar-panels.html\" rel=\"nofollow\">https:&#x2F;&#x2F;a1solarstore.com&#x2F;solar-panels&#x2F;440-watt-solar-panels....</a>"
    },
    {
      "id": 41398661,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-30T08:06:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "or you could maybe drive the rv down to mexico"
    },
    {
      "id": 41395963,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:26:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "while it&#x27;s true that there&#x27;s a retail markup, that markup is not close to a factor of 4.  it&#x27;s about 30%.  the €0.12 per peak watt cost i mentioned for mainstream solar panels is not at the factory; that&#x27;s a wholesale price in european markets, which are halfway around the world from the factory.  if you went to the factory, you could probably get them for €0.10 per peak watt, about 45 dollars each for your 400-watt panels. (unless you don&#x27;t look chinese, in which case trying to go to the factory might get you arrested, and you&#x27;d definitely have to buy more than 6–8)<p>the longer comment of mine i linked explains in more detail how you&#x27;re getting swindled.  in english!"
    },
    {
      "id": 41401222,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=foobarian",
        "name": "foobarian"
      },
      "date": "2024-08-30T14:44:04",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Just wanted to clarify, are all these panels equal in size?  Is there a &quot;standard&quot; solar panel format?  It would be easy to otherwise get a much cheaper panel providing the same output if it was just a bit larger.  It might be fine for ground installations but in your case space is at a premium"
    },
    {
      "id": 41425140,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T13:14:10",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "there used to be a standard size, but as i understand it, the price pressure the article is about has induced some makers to introduce larger-sized panels.  somewhat surprisingly, lower-efficiency panels (such as polycrystalline types) don&#x27;t cost much less per square meter, and so they seem to be gradually disappearing from the market"
    },
    {
      "id": 41394506,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:35:23",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "this article is unfortunately fairly usa-centric, but it doesn&#x27;t really mention the main cost driver for solar installations in the usa, which is the predatory tariffs that have been imposed by a series of administrations, based on the most ridiculous rationales.  it does mention that solar panels in the us cost more than twice what they cost elsewhere, but doesn&#x27;t really explain why.  the number now is more like 4× because international panel prices have <i>fallen by half</i> since the year-old figures mostly used in the article.  it says, &#x27;overseas, it can go as low as $0.10-$0.12&#x2F;watt&#x27;, but actually the current benchmark figure for low-cost solar panels in <a href=\"https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preisindex&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preis...</a> is €0.07&#x2F;watt peak, which is 8¢&#x2F;watt peak in the us dollar<p>the latest ridiculous news item in this pathetic story of regulatory capture is a petition from the american alliance for solar manufacturing trade committee to impose <i>retroactive</i> import tariffs on solar panel imports from vietnam and thailand <a href=\"https:&#x2F;&#x2F;www.pv-tech.org&#x2F;us-manufacturers-seek-retroactive-tariffs-on-solar-import-surge&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.pv-tech.org&#x2F;us-manufacturers-seek-retroactive-ta...</a><p>the supposed justification for thus kneecapping us heavy industry by cutting it off from the cheapest energy in history? &#x27;dumping&#x27;: supposedly chinese solar panels (the majority of the panels sold in the world, but under 0.1% of the us market <a href=\"https:&#x2F;&#x2F;www.seia.org&#x2F;research-resources&#x2F;solar-market-insight-report-q2-2024\" rel=\"nofollow\">https:&#x2F;&#x2F;www.seia.org&#x2F;research-resources&#x2F;solar-market-insight...</a> More) are being sold &#x27;under cost&#x27;.  but when you dig into the justifications for the supposed &#x27;dumping&#x27;, it turns out that they amount to things like &#x27;provision of solar-grade polysilicon for ltar (less than adequate remuneration)&#x27; and &#x27;funding on infrastructure&#x27;.  <i>i.e.</i>, the us department of commerce is trying to charge chinese solar module manufacturers for the government building power plants and cutting good deals on raw materials with other chinese companies.  see barcode:4426784-02 c-570-011 for example (there&#x27;s apparently no url i can use to link these documents directly).  useful starting points may include <a href=\"https:&#x2F;&#x2F;www.federalregister.gov&#x2F;documents&#x2F;2023&#x2F;07&#x2F;11&#x2F;2023-14563&#x2F;crystalline-silicon-photovoltaic-cells-whether-or-not-assembled-into-modules-from-the-peoples\" rel=\"nofollow\">https:&#x2F;&#x2F;www.federalregister.gov&#x2F;documents&#x2F;2023&#x2F;07&#x2F;11&#x2F;2023-14...</a> <a href=\"https:&#x2F;&#x2F;www.govinfo.gov&#x2F;content&#x2F;pkg&#x2F;FR-2014-12-23&#x2F;pdf&#x2F;2014-30071.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.govinfo.gov&#x2F;content&#x2F;pkg&#x2F;FR-2014-12-23&#x2F;pdf&#x2F;2014-3...</a><p>to give you an idea of how ridiculous these justifications are, one of the other documents i got was arguing about whether the fair market price for chinese solar-panel-assembling labor should be determined by comparing it to malaysian electronics-assembly labor or romanian electronics-assembly labor.  they ended up settling on turkish labor, so to the extent that wages in the area of china where trina solar assembles their panels are lower than wages in turkey, the us department of commerce is imposing the difference as countervailing tariffs for &#x27;dumping&#x27;.  the evidentiary standard in these proceedings is &#x27;guilty until proven innocent&#x27; (&#x27;adverse inference in selecting from the facts otherwise available&#x27;)<p>the us keeps imposing <i>new</i> import tariffs against renewable energy; <a href=\"https:&#x2F;&#x2F;finance.yahoo.com&#x2F;news&#x2F;analysis-bidens-china-tariff-wall-203334559.html\" rel=\"nofollow\">https:&#x2F;&#x2F;finance.yahoo.com&#x2F;news&#x2F;analysis-bidens-china-tariff-...</a> documents how they&#x27;re trying to keep out not just solar panels but also electric cars, but failing, because chinese investment is creating new productive capacity for the relevant goods throughout the world — the opposite of what would happen if dumping was actually happening, since the objective of dumping is to drive competition out of business<p>the result is that solar energy in the usa is several times more expensive than in the rest of the world, so it&#x27;s getting installed only very slowly.  the contrast between the rather pathetic <a href=\"https:&#x2F;&#x2F;www.seia.org&#x2F;news&#x2F;solar-installations-skyrocket-2023-record-setting-first-full-year-inflation-reduction-act\" rel=\"nofollow\">https:&#x2F;&#x2F;www.seia.org&#x2F;news&#x2F;solar-installations-skyrocket-2023...</a> (32.4 gigawatts installed in the usa in 02023, only 8% of the worldwide 430 new gigawatts installed worldwide) and the 216 gigawatts added at the same time in the prc (<a href=\"https:&#x2F;&#x2F;www.spglobal.com&#x2F;commodityinsights&#x2F;en&#x2F;market-insights&#x2F;latest-news&#x2F;energy-transition&#x2F;020824-infographic-china-solar-capacity-coal-electricity-renewable-energy-hydro-wind\" rel=\"nofollow\">https:&#x2F;&#x2F;www.spglobal.com&#x2F;commodityinsights&#x2F;en&#x2F;market-insight...</a>) and the astounding <i>660 gigawatts</i> expected in the prc this year: <a href=\"https:&#x2F;&#x2F;www.pv-tech.org&#x2F;bnef-global-solar-additions-655gwdc-in-2024&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.pv-tech.org&#x2F;bnef-global-solar-additions-655gwdc-...</a><p>this by itself should make it clear how ridiculous the &#x27;dumping&#x27; accusations are.  if you&#x27;re dumping a product, selling it below its production cost in order to eliminate overseas competition, you don&#x27;t sell it <i>to yourself</i>.  that&#x27;s losing money on every sale and trying to make it up on volume!<p>so what&#x27;s happening is that the world is going through the renewable energy transition, solving the problem of global warming, despite the usa fighting tooth and nail to prevent it with its foreign and trade policy.  the prc is leading, developing new manufacturing techniques that lower the prices of energy so low that us companies insist they&#x27;re dumping their solar panels below cost, but mostly investing in securing access for their own domestic industry<p>the last time a major new source of energy became available was the steam engine, which is still what powers most of the world&#x27;s electric grid, in the form of steam turbines in nuclear and coal power plants.  that enabled new forms of industry and new economic structures.  for the last 50 years we&#x27;ve been stuck in an energy crisis as we&#x27;ve run into fossil-fuel resource constraints and dropping eroei.  that crisis has finally ended; the future is already here, but it&#x27;s not widely distributed.  usa policy seems focused on ensuring that the future arrives domestically as slowly as possible, enabling china to obtain as large a lead as possible in the new energy-intensive industries enabled by unbelievably cheap solar energy<p>if you want the us to be the place where builders go to build things, you need to fix this"
    },
    {
      "id": 41394443,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:28:37",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "that is already the case; solar panels have been cheaper than window glass per square meter for years now.  that&#x27;s why the article says:<p>&gt; <i>Is there a floor for these costs?</i><p>&gt; &gt; <i>Solar manufacturers are investing hundreds of billions in expanded capacity in an all out war for market share against a background of panel price drops of 15-25% per year. There is an extreme economic forcing function towards rapid improvement and ultimately convergence with the Platonically ideal solar panel - some 20 um thick layer of silicon supported by a 100 um thick layer of plastic rolled off a spool - or some other tech that&#x27;s thinner and cheaper than paper.—Casey Handmer</i><p>&gt; <i>Thinner and cheaper than paper. Think about that!</i><p>i suspect that at some point people are going to be mounting bare (passivated) silicon dies on string and putting up chicken wire over them to keep the hailstones off, or something like that.  think about how plants support their leaves"
    },
    {
      "id": 41395683,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tuatoru",
        "name": "tuatoru"
      },
      "date": "2024-08-29T21:55:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Perovskite films on microgrooved plastic film, offset printed roll to roll and rolled out mounted vertically like windbreak netting in orchards.<p>For example: <a href=\"https:&#x2F;&#x2F;eyouagro.com&#x2F;blog&#x2F;citrus-fruits-wind-protection-netting&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;eyouagro.com&#x2F;blog&#x2F;citrus-fruits-wind-protection-nett...</a><p>Reduces land costs because the land is already being used for crops of one sort or another.  Agrivoltaics ftw."
    },
    {
      "id": 41395979,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:28:05",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "that&#x27;s fantastic!  yeah, you don&#x27;t want to shade your wheat and corn with solar panels, but oranges and lettuce will benefit from it<p>it&#x27;s going to be pretty hard to dethrone silicon after the amount of supply-chain and process optimization that&#x27;s gone into lowering its costs, but in some sense things like what you&#x27;re describing seem to make it inevitable at some point"
    },
    {
      "id": 41394402,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:24:04",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "this is the main topic of the article; it describes where those costs come from and how they are being reduced"
    },
    {
      "id": 41394377,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:20:56",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "it would be much more, but the us imports 130% of the aluminum it consumes from places with lower energy costs: <a href=\"https:&#x2F;&#x2F;pubs.usgs.gov&#x2F;periodicals&#x2F;mcs2022&#x2F;mcs2022-aluminum.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;pubs.usgs.gov&#x2F;periodicals&#x2F;mcs2022&#x2F;mcs2022-aluminum.p...</a>"
    },
    {
      "id": 41394483,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=bobthepanda",
        "name": "bobthepanda"
      },
      "date": "2024-08-29T19:32:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Bahrain and UAE being big aluminum smelters is a bit surprising."
    },
    {
      "id": 41395182,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=cameldrv",
        "name": "cameldrv"
      },
      "date": "2024-08-29T20:56:56",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Exporting aluminum is basically exporting electricity, except aluminum is easy to ship, costs very little to store, and has an indefinite shelf life.  For places with a lot of natural gas and no pipelines to export it, it’s often easier to export aluminum than liquified gas."
    },
    {
      "id": 41395484,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T21:29:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "if you&#x27;re burning it in aluminum-air fuel cells, it can be <i>literally</i> exporting electricity.  right now that isn&#x27;t a commercial-scale activity, but possibly it will become profitable in the coming years for places with a lot of solar power and no hvdc lines to export it"
    },
    {
      "id": 41394801,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HPsquared",
        "name": "HPsquared"
      },
      "date": "2024-08-29T20:10:49",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Iceland too. It takes a few workers and a lot of energy. Very sensitive to market conditions though. Peaky."
    },
    {
      "id": 41394365,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:19:16",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "for some economic activities, energy is not a limiting input; you are implicitly referring to economic production enabled by electric lighting, such as office work, and indeed energy has not been a limiting input for that for at least a century.  reducing the cost of energy will not result in more gdp in those sectors<p>for other economic activities, such as solar panel production, aluminum production, and neural network training, energy <i>is</i> a limiting input.  reducing the cost of energy <i>will</i> result in more gdp in those sectors"
    },
    {
      "id": 41394404,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-29T19:24:24",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Dropping energy costs lowers costs in every sector but rarely by that much.<p>&gt; aluminum production<p>Dropping energy costs an by 75% only drops smelting prices by about 30% and finished goods by even less."
    },
    {
      "id": 41395268,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T21:05:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "there&#x27;s usually a long lag between a drop in the price of an input and the eventual impact on the price of the outputs, because part of the effect is mediated by the adoption of innovations that use more of the newly-cheaper inputs and less of the still-expensive inputs<p>to take one example, the last time we got access to a major new source of energy was something like watt&#x27;s steam-engine in 01776.  one of the effects of this was the widespread replacement of steel cans (which hadn&#x27;t been invented in 01776) and glass bottles with aluminum cans in the 01970s, 200 years later.  another was the replacement of travel by ship with travel by air, also about 200 years later.  the delay is because many intermediating innovations were required, for example, in the aluminum-can case:<p>- the discovery of electrolysis;<p>- the discovery of aluminum;<p>- the discovery of canning;<p>- the hall–héroult process;<p>- improved aluminum alloys that permitted the use of 100μm-thick cans;<p>- the invention of deep drawing;<p>- epoxy liners that made aluminum cans chemically stable to acidic contents such as coca-cola;<p>- long-distance trucking which increased the cost imposed by heavier glass bottles."
    },
    {
      "id": 41396007,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=njarboe",
        "name": "njarboe"
      },
      "date": "2024-08-29T22:30:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "We started to access nuclear power as a new source, but then stopped for quite a while. It looks like things are starting up again. We&#x27;ll see."
    },
    {
      "id": 41396098,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T22:43:37",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "the issue with nuclear power is that the humans don&#x27;t yet have the technology to exploit it economically; at their current primitive level it&#x27;s uncompetitive with other sources of energy.  like printing 1000 years ago or heron&#x27;s aeolipile"
    },
    {
      "id": 41398174,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-08-30T06:25:15",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; humans don&#x27;t yet have the technology to exploit it economically<p>$2,500&#x2F;kW of capacity isn&#x27;t too expensive, given the alternatives.<p><a href=\"https:&#x2F;&#x2F;www.latitudemedia.com&#x2F;news&#x2F;catalyst-the-cost-of-nuclear\" rel=\"nofollow\">https:&#x2F;&#x2F;www.latitudemedia.com&#x2F;news&#x2F;catalyst-the-cost-of-nucl...</a><p>The recent batch of 11 reactors authorised by China are perhaps 2.8B USD each for 1.1GW plant (plus a high temperature gas reactor)."
    },
    {
      "id": 41398644,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-30T08:03:09",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "but 1.1 gigawatts of mainstream solar panels is 0.14 billion usd.  $130 per kilowatt of capacity.  even at the dismal 10% solar capacity factor achieved in very northerly countries like germany, the reactor is twice the price per <i>average</i> watt, and it needs to be installed far from the point of use—you can&#x27;t buy a 440-watt nuclear reactor, so you need transmission, distribution, and transformers, all of which incur energy losses, capital investment, and safety hazards you can avoid with photovoltaic<p>that large grid also needs regulation, billing, and political stability.  (a reactor is an appealing target for both russian glide bombs and enron-style scams.)  and the reactor is not dispatchable over timescales of less than a day, while you can short out a solar panel in microseconds<p>fundamentally the reactor can&#x27;t compete economically because it&#x27;s shackled to a pricey steam engine.  the reactor itself is a triviality, just a pile of fuel larger than the critical mass.  some of them formed naturally at oklo billions of years ago.  what&#x27;s hard is integrating that energy release mechanism into a machine, and that&#x27;s because the humans are still terrible at making machines"
    },
    {
      "id": 41399898,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-08-30T12:09:40",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; but 1.1 gigawatts of mainstream solar panels is 0.14 billion usd<p>A solar farm is more than just solar panels. This 3.5GW solar farm cost 2.13B USD, so by your estimates the panels make up just 1&#x2F;5 of the cost of the farm. I&#x27;d expect the load factor of the nuclear power station to offset the solar farm&#x27;s nameplate capacity advantage, and lead to steadier prices&#x2F;fewer storage requirements etc etc.<p><a href=\"https:&#x2F;&#x2F;www.pv-magazine.com&#x2F;2024&#x2F;06&#x2F;06&#x2F;worlds-largest-solar-plant-goes-online-in-china-2&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.pv-magazine.com&#x2F;2024&#x2F;06&#x2F;06&#x2F;worlds-largest-solar-...</a><p>&gt; and it needs to be installed far from the point of use<p>Note that this is a problem for solar farms in China; they are installed where land is not valuable. Hence all the HVDC transmission records being broken in China. Plus nuclear power stations can be close to populations. For instance <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Daya_Bay_Nuclear_Power_Plant\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Daya_Bay_Nuclear_Power_Plant</a> is 50km from Hong Kong.<p>&gt; the reactor is not dispatchable over timescales of less than a day<p>Modern reactors have load following capabilities, e.g. the AP1000 can ramp up 5% a minute within the 15%-100% band."
    },
    {
      "id": 41422172,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T02:34:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i agree that the difference in capacity factor is very important, and i should have made that clearer in my comment.  nuclear is typically around 85%, solar typically around 20%.  solar farms in the california desert are 29%, so this desert plant might have a similarly high capacity factor, but last time i checked, the prc average was more like 10%, and i don&#x27;t understand why.  possibly factors like transmission congestion are to blame and will be at play here too<p>especially if it&#x27;s cheaper to put up more solar panels somewhere more overcast than to build hvdc transmission lines from urumqi to shanghai<p>it turns out that, if you use solar panels the same way you&#x27;d use nuclear reactors, by centralizing them hundreds or thousands of kilometers away from where the energy is used (as in this case), or by concreting over prime beachfront property (which nuclear power plants need) to build giant solar farms on, they can cost almost as much as nuclear reactors do, or even more<p>this is analogous to how factories first used electric motors: they installed a giant electric motor in the factory&#x27;s powerhouse to drive the line shafts, replacing the steam-engine the powerhouse was built for.  consequently electrification famously didn&#x27;t increase factory productivity for decades<p>when i said that nuclear power plants &#x27;need to be installed far from the point of use&#x27;, i didn&#x27;t mean that they couldn&#x27;t be tens of kilometers, or even single-digit kilometers, from the point of use.  i meant that they can&#x27;t be single-digit <i>meters</i> from the point of use. solar panels can, and that dramatically drops costs<p>i appreciate the correction about the ap1000!  naval nuclear reactors have been able to rapidly ramp up and down since forever, so it&#x27;s good to see that capability making it into commercial nuclear power"
    },
    {
      "id": 41431739,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-09-03T06:00:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; i meant that they can&#x27;t be single-digit meters from the point of use. solar panels can, and that dramatically drops costs<p>Transmission costs, yes. Plus if the solar is behind-the-meter you might avoid some of the taxes and levies applied to grid electricity.<p>(Note that I realise the focus of my comment from here on down has changed from China to the UK, but then again I&#x27;ve not helped install a solar installation over there!)<p>However with UK rooftop solar home-owners do not have much negotiating power as the market supply is restricted by the MCS scheme (Microgeneration Certification Scheme). This may be changing in the future (Flexi-Orb scheme), but until a greater pool of competent installers are in the market the prices will not decrease.<p>A relative had 6.4kW solar (and 5kW hybrid inverter) installed last summer for around £7,000. I added in some batteries for another few thousand. The panels generated around 5,100 kWh last year, for a capacity factor of around 9%."
    },
    {
      "id": 41433452,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-03T10:44:45",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah, the uk is pretty miserable for solar!  and in terms of regulation, it&#x27;s definitely not the worst place in the world, but it&#x27;s definitely not going to be leading the transition to renewable energy the way it led the transition to steam either"
    },
    {
      "id": 41400425,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-30T13:18:38",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Pure PV farms have minimal operational costs, nuclear has huge ongoing costs.  For a more realistic comparison the operating costs of nuclear offset the cost of <i>batteries</i> for solar.<p>So capital costs vs capital costs on a per Wh basis isn’t in favor of Solar it favors nuclear which has <i>less</i> flexibility. IE: 24 GWh per day of battery backed solar can dump half that power over 2 hours @ 6GW. 24GWh of nuclear IE a 1GWh reactor caps out at 1GW.  If you want to ramp to 6GW of output nuclear needs several nuclear reactors and all of their associated costs.<p>&gt; Modern reactors have load following capabilities<p>Load following isn’t free for nuclear, any time you’re not operating at 100% you’re losing money.  Batteries are inherently way more flexible.<p>It also costs more to build a load following reactor and they have more experience maintenance issue due to thermal stress.  Nuclear inherently favors steady state operations due to the Xe pit  (<a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Iodine_pit\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Iodine_pit</a>) but it also requires being taken offline for long periods for maintaining, refurbishing, and or refueling."
    },
    {
      "id": 41403036,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-08-30T17:57:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; Pure PV farms have minimal operational costs, nuclear has huge ongoing costs.<p><a href=\"https:&#x2F;&#x2F;www.iea.org&#x2F;reports&#x2F;projected-costs-of-generating-electricity-2020\" rel=\"nofollow\">https:&#x2F;&#x2F;www.iea.org&#x2F;reports&#x2F;projected-costs-of-generating-el...</a> page 59 table 3.13a puts O&amp;M for nuclear in the USA at about 12 USD&#x2F;MWh plus just over 9 USD&#x2F;MWh for fuel, and table 3.14 puts O&amp;M for utility scale solar at around 6 USD&#x2F;MWh or so.<p>As for batteries, I think a few hundred USD&#x2F;kWh is a reasonable guesstimate of cost (raw LiFePO4 cells are now sub-100 USD&#x2F;kWh). Backing up each hour of production of a 1GW power station would cost a few hundred million USD, plus the cost of the solar farm to charge the battery up.<p>&gt; 24 GWh per day of battery backed solar can dump half that power over 2 hours @ 6GW<p>At which point the transmission becomes the limitation; the grid operator probably wants a fairly stable flow of electricity through the wires to maximise utilisation so the 6GW is not realistic, nor would moving the electricity during the day to load-adjacent storage be efficient.<p>&gt; Load following isn’t free for nuclear, any time you’re not operating at 100% you’re losing money.<p>I was responding to the point that solar panels are inherently more flexible because you can turn them off (because ...????). The same reasoning you&#x27;ve made about nuclear load following being uneconomical can be made about pure solar too.<p>&gt; Nuclear inherently favors steady state operations due to the Xe pit<p>Operators change the boron concentration to offset the negative change in reactivity due to Xe-135 levels. For PWRs this is not a big problem, you just have to know it is there and do the calculation for I&#x2F;Xe concentrations given the power levels."
    },
    {
      "id": 41403608,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-30T19:09:47",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I disagree with your quoted numbers. They aren’t current or inflation adjust to the same year, they also exclude several costs associated with nuclear such as insurance and setting money aside for decommissioning.<p>Ex: Your quoted fuel costs would be 0.9c&#x2F;kWh in (2020 publish date) = 1.3c&#x2F;kWh in 2024.  O&amp;M is often quoted as 4x fuel costs so 5.2kWh.  “Fuel costs account for about 28% of a nuclear plant&#x27;s operating expenses.” <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Economics_of_nuclear_power_plants\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Economics_of_nuclear_power_pla...</a><p>A battery system which costs 200$&#x2F;kWh and does 5,000 cycles = 5c&#x2F;kWh.  (Not every kWh from a solar farm needs to be stored, but this is just a ballpark comparison.)<p>&gt; At which point the transmission becomes the limitation; the grid operator probably wants a fairly stable flow of electricity through the wires to maximise utilisation<p>You’re missing the forest for the trees here. Utilization follows demand, a state with peak demand of 6GW is going to have transmission lines setup for 6GW.  But comparing the options you have  nuclear with 4x 1.5GW reactors averaging ~40% utilization or batteries backed by solar.  Run the numbers and Solar wins by a landslide."
    },
    {
      "id": 41407119,
      "lvl": 11,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-08-31T07:27:29",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; They aren’t current or inflation adjust to the same year<p>Page 41 states<p><pre><code>    All costs are reported here in 2018 USD terms.</code></pre>&gt; several costs associated with nuclear such as insurance<p>Insurance is required for any industrial facility. The IEA report does not mention insurance. <a href=\"https:&#x2F;&#x2F;world-nuclear.org&#x2F;information-library&#x2F;safety-and-security&#x2F;safety-of-plants&#x2F;liability-for-nuclear-damage\" rel=\"nofollow\">https:&#x2F;&#x2F;world-nuclear.org&#x2F;information-library&#x2F;safety-and-sec...</a> puts insurance costs at around 1M USD&#x2F;year (and separate conditional payments if an accident does happen), which divided by 9M MWh&#x2F;reactor does not work out to much.<p>&gt; setting money aside for decommissioning<p>For nuclear between 0.01 and 0.39 USD&#x2F;MWh, and solar between 0.03 and 0.58 USD&#x2F;MWh (depending on discounting).<p>&gt; O&amp;M is often quoted as 4x fuel costs<p>The data in the IEA report differs; it is somewhere between the fuel costs and twice the fuel costs.<p>&gt; Not every kWh from a solar farm needs to be stored<p>Rooftop solar will cannibalise the utility solar&#x27;s daytime market. The demand for utility solar&#x27;s energy will for the most part occur when the sun does not shine.<p>&gt;  a state with peak demand of 6GW is going to have transmission lines setup for 6GW.<p>But this ignores the physicality of the grid; power stations are dispatched based on location as well as availability because transmission is expensive to build and limited in capacity.<p>&gt; you have nuclear with 4x 1.5GW reactors averaging ~40% utilization<p>So your demand model is 2GW for 22 hours and 6GW for 2 hours, right? Are there many places which exhibit such wild swings? Dynamic pricing&#x2F;load shifting, pumped hydro and OCGTs would be the traditional solutions."
    },
    {
      "id": 41408000,
      "lvl": 12,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-31T11:20:38",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; All costs are reported here in 2018 USD terms.<p>So even further out of date.<p>&gt; O&amp;M is often quoted as 4x fuel costsThe data in the IEA report differs; it is somewhere between the fuel costs and twice the fuel costs.<p>Operations &amp; Maintenance must include fuel costs…  They are doing the thing where they break actual costs into several buckets to make actual operational costs seem lower.   Refurbishment isn’t maintenance yadda yadda.<p>Same deal is going on with insurance. That 1.1 M &#x2F; year covers some nuclear accidents, but the self insurance risk is quite significant even if you exclude the risk subsidy assumed by governments.  IE: In the event of a large scale disaster insurance doesn’t make the reactor owner whole meaning their out the value of 1 or more nuclear reactors.<p>So yea 1.1M &#x2F; year only works out to 0.01c&#x2F;kWh but that’s an underestimate.<p>&gt; Rooftop solar will cannibalise the utility solar&#x27;s daytime market. The demand for utility solar&#x27;s energy will for the most part occur when the sun does not shine.<p>Even assuming vastly more rooftop solar… PV panels produce power on a long tail curve not just at peak hours.  Rooftop solar however only supplies the grid with power after the houses needs are met which is a significantly narrower area."
    },
    {
      "id": 41431790,
      "lvl": 13,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chickenbig",
        "name": "chickenbig"
      },
      "date": "2024-09-03T06:11:29",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; So even further out of date.<p>Do you have references for how much a solar plant costs to build and maintain? A breakdown of costs would be good.<p>&gt; Operations &amp; Maintenance must include fuel costs…<p>I presume this was done to make section 5.4 &quot;Fuel cost sensitivity&quot; easy.<p>&gt; Rooftop solar however only supplies the grid with power after the houses needs are met which is a significantly narrower area.<p>What about if people are over-specifying their solar PV system to make use of net-energy-metering (or high feed in tariffs) to reduce their annual bill (for instance in California)?"
    },
    {
      "id": 41425374,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T13:50:34",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i agree that retric&#x27;s reasoning about capital utilization efficiency applies to both nuclear and solar generation; in fact, it might be even more applicable to solar generation, because although the variable costs (cost of sales, you might say—proportional to power usage) for nuclear energy are low, they&#x27;re virtually zero for pv.  what <i>i</i> was saying about dispatchability is that nuclear plants typically <i>can&#x27;t</i> be turned off; they keep generating power even when grid prices go negative, so the nuclear plant operator is literally paying someone with a giant resistor bank to burn up the energy the reactors are generating.  (nowadays, hopefully they&#x27;re paying someone with a battery bank to charge their batteries instead, but the future is not yet widely distributed.)  your earlier comment about the ap1000 having significant dispatchability is welcome news, and <a href=\"https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AP1000\" rel=\"nofollow\">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AP1000</a> says there are six of them already in operation<p>there are particularly perverse grid incentives in some places which result in pv farms continuing to operate when grid prices go negative, too, but that&#x27;s just a fake market; nothing about the generation technology requires that.  if you close a contactor to short out your solar panel, it stops dumping any energy into the grid in nanoseconds, literally faster than the contact bounce in your contactor, without any damage or risk to the panel, power electronics, or the rest of the plant<p>with respect to transmission and battery storage, while there is <i>some</i> reason to locate pv farms some distance from the energy consumers—the consumers may be tightly packed and&#x2F;or in a cloudy area—there is <i>no</i> reason to locate battery storage far away from energy consumers.  you want batteries to be as spread-out as possible, as close to the load as possible, for many reasons: to avoid time-of-day congestion of transmission capacity (and even distribution!  point-of-use batteries reduce or eliminate the need to overprovision distribution capacity); to prevent fires from spreading from one battery to another; to eliminate power outages caused by problems in transmission and distribution; to eliminate transmission and distribution energy losses for stored energy; and to reduce the opportunities for rent-seeking by transmission and distribution operators.  the land use, climate, and safety considerations that sometimes limit the distribution of pv spreading-out don&#x27;t apply to spreading battery storage out<p>as for the o&amp;m costs: while the iea does wonderful work, and i appreciate you pointing to this very informative open-access report, this report is from december 02020, and it&#x27;s largely built on data from previous years, much of it from plants built years earlier.  the main topic of the tomas pueyo article we&#x27;re commenting on here is how lower prices for solar panels are forcing people to design new solar power generation in ways that &#x27;waste&#x27; solar panels in order to commensurately reduce the other associated costs, such as the operation &amp; maintenance costs you refer to in table 3.14<p>with that in mind, looking at <a href=\"https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preisindex&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preis...</a>, pvxchange&#x27;s current mainstream panel price index is €0,12 per peak watt, and in september 02017 (probably about the average time the plants profiled in the iea report were being built, and as far back as the data currently on that page goes, though archive.org has older versions) it was €0,42 per peak watt.  that is to say, solar pv modules cost 250% more at the time.  those solar farms were designed for a very different world than the one we live in today, one that could tolerate much higher o&amp;m costs in order to make better use of the comparatively scarcer solar panels"
    },
    {
      "id": 41399447,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chgs",
        "name": "chgs"
      },
      "date": "2024-08-30T10:40:03",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "One larger cost you might think of with solar is land - but even in the U.K. where land isn’t exactly cheap leasing prices are about £1k an acre per year, and an acre will generate about 350MWh a year, so that’s well under 1 cent per kWh, so it’s lost in the noise.<p><a href=\"https:&#x2F;&#x2F;www.fwi.co.uk&#x2F;business&#x2F;alternative-land-uses-leasing-land-for-solar-key-points\" rel=\"nofollow\">https:&#x2F;&#x2F;www.fwi.co.uk&#x2F;business&#x2F;alternative-land-uses-leasing...</a>"
    },
    {
      "id": 41425485,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T14:06:20",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "where land cost comes in is that it forces you to put solar generation far away from energy consumption, which incurs transmission and distribution costs which can be several times larger than the cost of the generation itself, as documented elsewhere in this thread for urumqi<p>as an example, a 100-megawatt electric arc furnace might occupy 1000 square meters, and it&#x27;s amenable to solar&#x27;s intermittent energy supply in a way that blast furnaces aren&#x27;t, but even at the ideal kilowatt per square meter, it needs 100 000 square meters of solar panels to power it, about ten city blocks.  more plausibly it needs several times that.  you can&#x27;t physically fit those panels closer than hundreds of meters from the arc furnace, and land costs mean you probably have to put them out in the countryside, likely tens of kilometers away"
    },
    {
      "id": 41400649,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-30T13:43:34",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Yea and that 0.3c&#x2F;kWh land cost is in the UK which is a terrible fit for nuclear."
    },
    {
      "id": 41404479,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Retric",
        "name": "Retric"
      },
      "date": "2024-08-30T21:11:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Ops, make that “fit for <i>solar</i>”"
    },
    {
      "id": 41409287,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-31T14:50:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "aha, that makes sense"
    },
    {
      "id": 41394327,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:15:56",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "wholesale it&#x27;s €0.07&#x2F;watt (peak) <a href=\"https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preisindex&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.solarserver.de&#x2F;photovoltaik-preis-pv-modul-preis...</a>"
    },
    {
      "id": 41394301,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:12:15",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "&#x27;too cheap to meter&#x27; was always nonsense and is nonsense now.  the only time you&#x27;re getting unmetered energy is if you have so much distributed generation and storage that transmission is unprofitable to build except for unusual cases.  for example, most people with a household solar system with storage have unmetered energy during the day<p>the numbers you saw for solar in 01975 were wrong, based on at most five years of commercial solar panel production.  now we have 50 years of commercial solar panel production to estimate the learning rate from, and consequently for the last five years or so solar is cheaper than power produced from coal or natural gas in most of the world.  you should have stopped waiting five years ago<p>in northern climates your plan b is probably a combination of wind, batteries, thermal energy storage, and emergency generators burning emergency-priced liquid fuels — initially fossil fuels, later electrolysis-sourced"
    },
    {
      "id": 41394459,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=aftbit",
        "name": "aftbit"
      },
      "date": "2024-08-29T19:30:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Hi Kragen, small world! At an individual scale, I think plan B is pretty much always a small tri-fuel generator. At a society scale, it&#x27;s probably a natural gas turbine. If batteries continue to follow their own price curve down, storage may well be a viable answer to 95%+ dunkelflautes at some point in our lifetimes.<p>I&#x27;m curious about the land use analysis and the embodied energy. Given the capacity factor inherent in my climate, will solar panels ever pay off the energy used to make, ship, and install them? Similar question for batteries. And how much land do we need to cover to handle the P95 dark&#x2F;calm weeks?<p>Anyway, interesting stuff. Solar continues to eat the world, slowly but surely. :)"
    },
    {
      "id": 41395598,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=pfdietz",
        "name": "pfdietz"
      },
      "date": "2024-08-29T21:45:00",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The societal solution for Dunkelflauten remains using turbines, but the gas burned switches from fossil natural gas to green hydrogen."
    },
    {
      "id": 41395466,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T21:27:34",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "hey, nice to be in touch!  i haven&#x27;t done much lately with sip<p>not just in our lifetimes; within a decade<p>as for embodied energy, the energy payback time on solar panels has been on the order of a few months to a year or two for decades now; see <a href=\"https:&#x2F;&#x2F;iea-pvps.org&#x2F;snapshot-reports&#x2F;snapshot-2024&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;iea-pvps.org&#x2F;snapshot-reports&#x2F;snapshot-2024&#x2F;</a> for a comprehensive overview, <a href=\"http:&#x2F;&#x2F;www.mdpi.com&#x2F;1996-1073&#x2F;9&#x2F;8&#x2F;622&#x2F;htm\" rel=\"nofollow\">http:&#x2F;&#x2F;www.mdpi.com&#x2F;1996-1073&#x2F;9&#x2F;8&#x2F;622&#x2F;htm</a> for a detailed analysis from 02016, or <a href=\"https:&#x2F;&#x2F;www.nrel.gov&#x2F;docs&#x2F;fy05osti&#x2F;37322.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nrel.gov&#x2F;docs&#x2F;fy05osti&#x2F;37322.pdf</a> for an easily digestible but outdated explanation from 02004.  you&#x27;re right that it depends on capacity factor!  according to <a href=\"https:&#x2F;&#x2F;www.spglobal.com&#x2F;marketintelligence&#x2F;en&#x2F;news-insights&#x2F;research&#x2F;2022-monthly-us-solar-capacity-factors-underscore-winter-doldrums\" rel=\"nofollow\">https:&#x2F;&#x2F;www.spglobal.com&#x2F;marketintelligence&#x2F;en&#x2F;news-insights...</a> the capacity factor across the border from you in kentucky is better than 25%, which is about as good as you can expect anywhere, but in much of your area only 10–15%, so you might need to multiply those payback times by as much as 2.  <a href=\"https:&#x2F;&#x2F;atb.nrel.gov&#x2F;img&#x2F;electricity&#x2F;2021&#x2F;p19&#x2F;v1&#x2F;solar-annual-ghi-2018-usa-scale-01.png\" rel=\"nofollow\">https:&#x2F;&#x2F;atb.nrel.gov&#x2F;img&#x2F;electricity&#x2F;2021&#x2F;p19&#x2F;v1&#x2F;solar-annua...</a> provides more detailed ghi (global horizontal irradiance) data for the usa which makes it look like it ought to be more like 20%.  i&#x27;d be very interested in actual numbers by us state<p>batteries use an insignificant amount of land, but probably overprovisioning of solar production is cheaper than batteries until you get into those 95th percentiles you&#x27;re talking about.  so probably we&#x27;re talking about something like 10× the land use for solar panels that would be needed to meet demand on average?  it depends a lot on how much demand flexibility there is; will dunkelflaute electrical grid demand be 20% of average grid demand, 2%, or 0.2%?  that&#x27;s a question that depends on things like what new designs people come up with for aluminum smelters and haber-bosch fertilizer plants, which is impossible to anticipate ahead of time"
    },
    {
      "id": 41401641,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=r00fus",
        "name": "r00fus"
      },
      "date": "2024-08-30T15:27:56",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Totally - my energy costs in CA with solar = generation is super-cheap during daytime but transmission costs from PG&amp;E are insanely high."
    },
    {
      "id": 41394280,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:08:46",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "wouldn’t you say that the article itself also contains a detailed (verbal) analysis?  betteridge&#x27;s law aside, it agrees with you"
    },
    {
      "id": 41396801,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=calmbonsai",
        "name": "calmbonsai"
      },
      "date": "2024-08-30T00:47:53",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "True.  I didn&#x27;t realize that Patio11&#x27;s podcast links had built-in transcripts so my additional description was superfluous."
    },
    {
      "id": 41429027,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-09-02T21:42:08",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i thought your additional description was helpful; i don&#x27;t follow every link in every hn comment to see what the resulting page says"
    },
    {
      "id": 41394271,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T19:08:05",
      "onstory": {
        "name": "Can solar costs keep shrinking?",
        "link": "https://news.ycombinator.com/item?id=41390884"
      },
      "text": "presumably what&#x27;s going to happen is that, as energy becomes dramatically cheaper, production will shift from less-energy-intensive processes toward more-energy-intensive processes.  this is likely to happen at many levels: between different routes for producing the same good (for example, pidgeon vs. dow process), between alternative goods (for example, aluminum vs. steel), between subsectors (for example, heavy industry vs. high-precision manufacturing), and across sectors (for example, manufacturing vs. services)<p>so, with the advent of innovations that dramatically drop the cost of energy, we should expect to see energy use grow <i>faster</i> than gdp.  that&#x27;s decoupling but in the opposite direction from the decoupling you&#x27;re talking about, which has been driven by the 01973–02023 energy crisis"
    },
    {
      "id": 41388434,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T08:03:20",
      "onstory": {
        "name": "Maker Skill Trees",
        "link": "https://news.ycombinator.com/item?id=41381598"
      },
      "text": "yeah, they&#x27;re poorly named and that seems to be one of several ways they&#x27;re poorly thought out.  but, whatever, 90% of everything is crap, and maybe they&#x27;ll get better"
    },
    {
      "id": 41375727,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T03:43:51",
      "onstory": {
        "name": "Diffusion models are real-time game engines",
        "link": "https://news.ycombinator.com/item?id=41375548"
      },
      "text": "here are some ideas:<p>- you could build a non-real-time version of the game engine and use the neural net as a real-time approximation<p>- you could edit videos shot in real life to have huds or whatever and train the neural net to simulate reality rather than doom.  (this paper used 900 million frames which i think is about a year of video if it&#x27;s 30fps, but maybe algorithmic improvements can cut the training requirements down) and a year of video isn&#x27;t actually all that much—like, maybe you could recruit 500 people to play paintball while wearing gopro cameras with accelerometers and gyros on their heads and paintball guns, so that you could get a year of video in a weekend?"
    },
    {
      "id": 41376426,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=injidup",
        "name": "injidup"
      },
      "date": "2024-08-28T06:04:41",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Why games? I will train it on 1 years worth of me attending Microsoft teams meetings. Then I will go surfing."
    },
    {
      "id": 41378184,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kqr",
        "name": "kqr"
      },
      "date": "2024-08-28T11:00:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Even if you spend 40 hours a week in video conferences, you&#x27;ll have to work for over four years to get one years&#x27; worth of footage. Of course, by then the models will be even better and so you might actually have a chance of going surfing.<p>I guess I should start hoarding video of myself now."
    },
    {
      "id": 41378573,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T12:08:33",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "the neural net doesn&#x27;t need a year of video to train to simulate your face; it can do that from a single photo.  the year of video is to learn how to play the game, and in most cases lots of people are playing the same game, so you can dump all their video in the same training set"
    },
    {
      "id": 41377618,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=akie",
        "name": "akie"
      },
      "date": "2024-08-28T09:20:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Ready to pay for this"
    },
    {
      "id": 41378144,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ccozan",
        "name": "ccozan"
      },
      "date": "2024-08-28T10:54:00",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "most underrated comment here!"
    },
    {
      "id": 41375825,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=w_for_wumbo",
        "name": "w_for_wumbo"
      },
      "date": "2024-08-28T04:01:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "That feels like the endgame of video game generation.You select an art style, a video and the type of game you&#x27;d like to play.The game is then generated in real-time responding to each action with respect to the existing rule engine.<p>I imagine a game like that could get so convincing in its details and immersiveness that one could forget they&#x27;re playing a game."
    },
    {
      "id": 41376722,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=troupo",
        "name": "troupo"
      },
      "date": "2024-08-28T06:56:50",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "There are thousands of games that mimic each other, and only a handful of them are any good.<p>What makes you think a mechanical &quot;predict next frame based on existing games&quot; will be any good?"
    },
    {
      "id": 41421106,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=w_for_wumbo",
        "name": "w_for_wumbo"
      },
      "date": "2024-09-01T23:01:33",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Oh, because we can link this in with biometric responses - heartrate, temperature, eye tracking etc.<p>We could build a &#x27;game&#x27; which would learn and adapt to precisely the chemistry that makes someone tick and then provide them a map to find the state in which their brain releases their desired state.<p>Then if the game has a directive - it should be pointed to work as a training tool to allow the user to determine how to release these chemicals themselves at will. Resulting in a player-base which no longer requires anything external  for accessing their own desired states."
    },
    {
      "id": 41376033,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=numpad0",
        "name": "numpad0"
      },
      "date": "2024-08-28T04:44:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "IIRC, both <i>2001</i>(1968) and <i>Solaris</i>(1972) depict that kind of things as part of alien euthanasia process, not as happy endings"
    },
    {
      "id": 41384382,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=catanama",
        "name": "catanama"
      },
      "date": "2024-08-28T21:06:49",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Well, 2001 is actually a happy ending, as Dave is reborn as a cosmic being. Solaris, at least in the book, is an attempt by the sentient ocean to communicate with researchers through mimics."
    },
    {
      "id": 41378637,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=hypertele-Xii",
        "name": "hypertele-Xii"
      },
      "date": "2024-08-28T12:18:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Also The Matrix, Oblivion, etc."
    },
    {
      "id": 41376673,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=aithrowaway1987",
        "name": "<font color=\"#3c963c\">aithrowaway1987</font>"
      },
      "date": "2024-08-28T06:48:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Have you ever played a video game? This is unbelievably depressing. This is a future where games like Slay the Spire, with a unique art style and innovative gameplay simply are not being made.<p>Not to mention this childish nonsense about &quot;forget they&#x27;re playing a game,&quot; as if every game needs to be lifelike VR and there&#x27;s no room for stylization or imagination. I am worried for the future that people think they want these things."
    },
    {
      "id": 41380234,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Workaccount2",
        "name": "Workaccount2"
      },
      "date": "2024-08-28T14:56:02",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The problem is quite the opposite, that AI will be able to generate games so many game with so many play styles that it will totally dilute the value of all games.<p>Compare it to music gen algo&#x27;s that can now produce music that is 100% indiscernible from generic crappy music. Which is insane given that 5 years ago it could maybe create the sound of something that maybe someone would describe as &quot;sort of guitar-like&quot;. At this rate of progress it&#x27;s probably not going to be long before AI is making better music than humans. And it&#x27;s infinitely available too."
    },
    {
      "id": 41379046,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=idiotsecant",
        "name": "idiotsecant"
      },
      "date": "2024-08-28T13:05:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Its a good thing. When the printing press was invented there were probably monks and scribes who thought that this new mechanical monster that took all the individual flourish out of reading was the end of literature. Instead it became a tool to make literature better and just removed a lot of drudgery. Games with individual style and design made by people will of course still exist. They&#x27;ll just be easier to make."
    },
    {
      "id": 41375903,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=omegaworks",
        "name": "omegaworks"
      },
      "date": "2024-08-28T04:16:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "EXISTENZ IS PAUSED!"
    },
    {
      "id": 41375892,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=THBC",
        "name": "THBC"
      },
      "date": "2024-08-28T04:13:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Holodeck is just around the corner"
    },
    {
      "id": 41377537,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=amelius",
        "name": "amelius"
      },
      "date": "2024-08-28T09:08:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Except for haptics."
    },
    {
      "id": 41376527,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=qznc",
        "name": "qznc"
      },
      "date": "2024-08-28T06:20:33",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The Cloud Gaming platforms could record things for training data."
    },
    {
      "id": 41373919,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:29:27",
      "onstory": {
        "name": "Bootstrappable Builds",
        "link": "https://news.ycombinator.com/item?id=41368835"
      },
      "text": "legibility is a lost cause in the case of the binary seed anyway, so you might as well shoot for more simplicity.  <a href=\"https:&#x2F;&#x2F;github.com&#x2F;oriansj&#x2F;bootstrap-seeds&#x2F;blob&#x2F;4715ae5292a6551a7d6e3ba2a2f1586a6bc5cb7d&#x2F;NATIVE&#x2F;x86&#x2F;stage0_monitor.img\">https:&#x2F;&#x2F;github.com&#x2F;oriansj&#x2F;bootstrap-seeds&#x2F;blob&#x2F;4715ae5292a6...</a> is down to 512 bytes, and it&#x27;s clearly possible to go further than that"
    },
    {
      "id": 41373811,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:20:11",
      "onstory": {
        "name": "The Monospace Web",
        "link": "https://news.ycombinator.com/item?id=41370020"
      },
      "text": "for dercuano my stylistic reference was medieval and early modern humanist manuscripts and incunabula, though without blackletter font, scribal abbreviations, and <i>scriptio continua</i>"
    },
    {
      "id": 41373731,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:13:16",
      "onstory": {
        "name": "The Monospace Web",
        "link": "https://news.ycombinator.com/item?id=41370020"
      },
      "text": "you could adjust the margins between paragraphs to fix the fixed grid, but then the tables won&#x27;t adhere to it"
    },
    {
      "id": 41372866,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T20:50:37",
      "onstory": {
        "name": "Microsoft donates the Mono Project to the Wine tea...",
        "link": "https://news.ycombinator.com/item?id=41371106"
      },
      "text": "anthropomorphizing complex social institutions such as corporations is ultimately unproductive and a net negative for clear thinking"
    },
    {
      "id": 41372828,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T20:46:59",
      "onstory": {
        "name": "Microsoft donates the Mono Project to the Wine tea...",
        "link": "https://news.ycombinator.com/item?id=41371106"
      },
      "text": "i want to love dotnet-core, especially since godot switched from mono in godot 3 to dotnet-core in godot 4, but so far i haven&#x27;t been able to<p>currently debian has a mono package but no dotnet-core package.  i&#x27;m not sure why this is; usually when debian lacks a popular nominally open-source package like this, it&#x27;s either because it fails to build from source, or because it has some kind of tricky licensing pitfall that most people haven&#x27;t noticed, but diligent debian developers have<p>does anyone know why this problem exists for dotnet-core?<p>also, does dotnet-core have a reasonable aot story for things like esp32 and ch32v003?"
    },
    {
      "id": 41374065,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=MarkSweep",
        "name": "MarkSweep"
      },
      "date": "2024-08-27T22:45:10",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": ".NET Core is available for Debian, you just have to add Microsoft&#x27;s APT source [1].<p>Fedora [2], Ubuntu [3], and FreeBSD [4] build .NET from source themselves. A lot of work has been done to make it possible to build .NET from source [5] without closed source components, so it might just be a matter of someone being motivated to create the package for Debian.<p>[1]: <a href=\"https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;install&#x2F;linux-debian\" rel=\"nofollow\">https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;install&#x2F;linux-...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;src.fedoraproject.org&#x2F;rpms&#x2F;dotnet8.0\" rel=\"nofollow\">https:&#x2F;&#x2F;src.fedoraproject.org&#x2F;rpms&#x2F;dotnet8.0</a><p>[3]: <a href=\"https:&#x2F;&#x2F;launchpad.net&#x2F;ubuntu&#x2F;+source&#x2F;dotnet8\" rel=\"nofollow\">https:&#x2F;&#x2F;launchpad.net&#x2F;ubuntu&#x2F;+source&#x2F;dotnet8</a><p>[4]: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;freebsd&#x2F;freebsd-ports&#x2F;tree&#x2F;main&#x2F;lang&#x2F;dotnet\">https:&#x2F;&#x2F;github.com&#x2F;freebsd&#x2F;freebsd-ports&#x2F;tree&#x2F;main&#x2F;lang&#x2F;dotn...</a><p>[5]: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;source-build\">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;source-build</a>"
    },
    {
      "id": 41375132,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=jwrallie",
        "name": "jwrallie"
      },
      "date": "2024-08-28T01:29:50",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "When using Microsoft repositories you need to explicitly opt out on telemetry collection.<p>I think telemetry collection alone should be a good reason for Debian to consider repackaging it. I don’t want telemetry to be collected on my GNU&#x2F;Linux machine, thanks Microsoft, but you already have so much telemetry from my Windows machine, please leave my other machines alone."
    },
    {
      "id": 41377500,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=neonsunset",
        "name": "neonsunset"
      },
      "date": "2024-08-28T09:00:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I hate to defend telemetry of all things but in this particular case the criticism is unfounded and lacks context:<p><a href=\"https:&#x2F;&#x2F;dotnet.microsoft.com&#x2F;en-us&#x2F;platform&#x2F;telemetry\" rel=\"nofollow\">https:&#x2F;&#x2F;dotnet.microsoft.com&#x2F;en-us&#x2F;platform&#x2F;telemetry</a><p><a href=\"https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;telemetry\" rel=\"nofollow\">https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;tools&#x2F;telemetr...</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;sdk&#x2F;tree&#x2F;main&#x2F;src&#x2F;Cli&#x2F;dotnet&#x2F;Telemetry\">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;sdk&#x2F;tree&#x2F;main&#x2F;src&#x2F;Cli&#x2F;dotnet&#x2F;Telem...</a><p>In any case, Debian would use <a href=\"https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;source-build\">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;source-build</a> and dotnet&#x2F;dotnet, and could easily include the argument or a patch for this. It’s unlikely to be an issue. My bet it was not in Debian because there was no one to take initiative yet or there was but that person has faced a backlash by people in Debian who are similar to vocal minority here that posts FUD because of their little personal crusade."
    },
    {
      "id": 41387576,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=jwrallie",
        "name": "jwrallie"
      },
      "date": "2024-08-29T05:14:33",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Your second source mentions you have to change a variable in bash to opt out for telemetry, I fail to see where the FUD is."
    },
    {
      "id": 41385831,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T00:16:04",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yeah, debian does generally make spyware explicitly opt-in.  even <a href=\"https:&#x2F;&#x2F;popcon.debian.org&#x2F;stable&#x2F;index.html\" rel=\"nofollow\">https:&#x2F;&#x2F;popcon.debian.org&#x2F;stable&#x2F;index.html</a> is explicitly opt-in<p>i think the links you provide make it clear that the criticism is not unfounded"
    },
    {
      "id": 41374082,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:47:20",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "yes, i know about the microsoft apt source<p>as for building from source, i see, thanks!  or maybe it&#x27;s unresolved legal concerns?  nobody so far in this thread has known of any, though"
    },
    {
      "id": 41374508,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=MarkSweep",
        "name": "MarkSweep"
      },
      "date": "2024-08-27T23:45:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I found someone requesting that it be added to Debian:<p><a href=\"https:&#x2F;&#x2F;bugs.debian.org&#x2F;cgi-bin&#x2F;%3Ca%20href=%22bugreport.cgi?bug=1078132%22%3E1078132%3C&#x2F;a%3E\" rel=\"nofollow\">https:&#x2F;&#x2F;bugs.debian.org&#x2F;cgi-bin&#x2F;%3Ca%20href=%22bugreport.cgi...</a><p>So far no one has mentioned licensing being an issue."
    },
    {
      "id": 41374780,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T00:26:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "that&#x27;s great!  possibly the link you meant was <a href=\"https:&#x2F;&#x2F;bugs.debian.org&#x2F;cgi-bin&#x2F;bugreport.cgi?bug=1078132\" rel=\"nofollow\">https:&#x2F;&#x2F;bugs.debian.org&#x2F;cgi-bin&#x2F;bugreport.cgi?bug=1078132</a><p>that seems to be from only a few weeks ago though<p>it doesn&#x27;t seem to have come up on debian-legal in the last year or so <a href=\"https:&#x2F;&#x2F;lists.debian.org&#x2F;debian-legal&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;lists.debian.org&#x2F;debian-legal&#x2F;</a> but debian-legal is also kind of a shadow of its former self"
    },
    {
      "id": 41378520,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=InfiniteRand",
        "name": "InfiniteRand"
      },
      "date": "2024-08-28T11:59:27",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Notably in that bug report the reporter says they cannot maintain it (not that I blame them, not a small work)"
    },
    {
      "id": 41374402,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Mogzol",
        "name": "Mogzol"
      },
      "date": "2024-08-27T23:30:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I doubt it is due to legal concerns if Ubuntu, Fedora, and FreeBSD are all distributing their own builds."
    },
    {
      "id": 41374721,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T00:16:35",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "you could easily imagine fedora distributing their own build of software whose licensing fails to comply with the debian free software guidelines; bundling proprietary software used to be common in linux distributions in fact"
    },
    {
      "id": 41374934,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=k_roy",
        "name": "k_roy"
      },
      "date": "2024-08-28T00:49:47",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&quot;legal concerns&quot; is not the same as philosophy differences."
    },
    {
      "id": 41373304,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=mdasen",
        "name": "mdasen"
      },
      "date": "2024-08-27T21:30:46",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "You can add add Microsoft&#x27;s repo to install it on Debian: <a href=\"https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;install&#x2F;linux-debian\" rel=\"nofollow\">https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;install&#x2F;linux-...</a>.<p>Does Debian require packages to work on all of its architectures? If so, that could be the issue. .NET Core only supports x86, x64, and Arm64 (I think Arm32 has been discontinued and RISC-V is experimental at this point).<p>It&#x27;s possible that they object to .NET Core having certain license restrictions on the Windows port (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;core&#x2F;blob&#x2F;main&#x2F;license-information-windows.md\">https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;core&#x2F;blob&#x2F;main&#x2F;license-information...</a>). .NET Core is mostly MIT or Apache licensed, but the Windows SDK has some additional terms. Skimming the third party licenses, that doesn&#x27;t seem like an issue (mostly MIT&#x2F;BSD&#x2F;Apache or similar).<p>I think the licensing situation is an interesting question: if you have software that&#x27;s 100% open source when compiled for your OS, but requires non-free stuff to run on Windows, is it ok to include in Debian? It looks like none of the non-free stuff (like WPF) gets distributed with the non-Windows SDK builds. Binaries created from your code only depend on MIT-licensed stuff on macOS and Linux, but might depend on something closed-source when targeting Windows - though it looks like almost all of that stuff is either WPF (so you wouldn&#x27;t be able to develop on Linux&#x2F;Mac anyway since those libraries wouldn&#x27;t be in the SDK on those platforms) or were removed as a runtime dependency in .NET 7. It looks like `Microsoft.DiaSymReader.Native` might be the only thing left. Maybe that&#x27;s what is holding it back?<p>&gt; also, does dotnet-core have a reasonable aot story for things like esp32 and ch32v003?<p>&quot;Reasonable&quot; can be a lot of things to a lot of different people. People have been working on RISC-V support. Samsung seems interested in it. But I probably wouldn&#x27;t recommend it at the moment - and Mono doesn&#x27;t really have RISC-V support either."
    },
    {
      "id": 41373587,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T21:59:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "to be clear, my question about debian is not about whether i can install dotnet-core in debian; it&#x27;s about why it isn&#x27;t in <i>debian&#x27;s</i> repositories rather than microsoft&#x27;s.  microsoft, to understate the case somewhat, doesn&#x27;t provide the stringent protections for users that debian does<p>debian doesn&#x27;t require packages to work on all of its architectures.   luajit, for example, has not been ported to riscv64, mips64el, or ppc64el <a href=\"https:&#x2F;&#x2F;packages.debian.org&#x2F;sid&#x2F;luajit\" rel=\"nofollow\">https:&#x2F;&#x2F;packages.debian.org&#x2F;sid&#x2F;luajit</a>, though lua5.1 is <a href=\"https:&#x2F;&#x2F;packages.debian.org&#x2F;sid&#x2F;lua5.1\" rel=\"nofollow\">https:&#x2F;&#x2F;packages.debian.org&#x2F;sid&#x2F;lua5.1</a>.  what the debian policy manual says about architecture-specific packages seems to be <a href=\"https:&#x2F;&#x2F;www.debian.org&#x2F;doc&#x2F;debian-policy&#x2F;ch-controlfields.html#architecture\" rel=\"nofollow\">https:&#x2F;&#x2F;www.debian.org&#x2F;doc&#x2F;debian-policy&#x2F;ch-controlfields.ht...</a>:<p>&gt; <i>Specifying a specific list of architectures indicates that the source will build an architecture-dependent package only on architectures included in the list. Specifying a list of architecture wildcards indicates that the source will build an architecture-dependent package on only those architectures that match any of the specified architecture wildcards. Specifying a list of architectures or architecture wildcards other than</i> any <i>is for the minority of cases where a program is not portable or is not useful on some architectures. Where possible, the program should be made portable instead.</i><p>i don&#x27;t think the license you link to would be a problem in itself, because it only applies to certain files which are not useful for running dotnet-core on debian anyway.  debian has lots of packages from which non-free-software files have been removed.  i don&#x27;t know anything about diasymreader?<p>with respect to esp32 and ch32v003, what i meant to point to was not the risc-v architecture (some esp32s are tensilica!) but the limited memory space; jit compilation is not a good fit for 2 kibibytes of ram or even 520 kilobytes of ram"
    },
    {
      "id": 41378980,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Const-me",
        "name": "Const-me"
      },
      "date": "2024-08-28T12:59:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; Arm32 has been discontinued<p>.NET 9.0 preview still includes ARMv7 builds for Linux: one based on glibc library, another one for Alpine."
    },
    {
      "id": 41373566,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ozim",
        "name": "ozim"
      },
      "date": "2024-08-27T21:56:42",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I would say it is .Net Foundation job to prepare and submit the package not Debian maintainers."
    },
    {
      "id": 41373594,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T21:59:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "if you want your package to be in debian, you are going to have to find a debian developer who is willing to take responsibility for maintaining it.  microsoft is already providing .deb packages on their website, at least binaries"
    },
    {
      "id": 41376355,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ozim",
        "name": "ozim"
      },
      "date": "2024-08-28T05:52:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "But it is not Microsoft like I mentioned but .Net Foundation.<p>They could get one of their people to become Debian maintainer."
    },
    {
      "id": 41377238,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T08:19:08",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "getting one of your people to become a debian developer is similar in difficulty to getting one of your people to become a senator or a citizen of switzerland"
    },
    {
      "id": 41375322,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=TillE",
        "name": "TillE"
      },
      "date": "2024-08-28T02:10:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "That&#x27;s not how Linux distros work. The OS maintainers make their own packages."
    },
    {
      "id": 41375422,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chungy",
        "name": "chungy"
      },
      "date": "2024-08-28T02:32:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It sure wouldn&#x27;t hurt if they hired a Debian Developer to do it right, or maybe work through the process of turning an employee into a Debian Developer."
    },
    {
      "id": 41384859,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ptx",
        "name": "ptx"
      },
      "date": "2024-08-28T21:55:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Debian developers can do it right because they&#x27;re not affiliated with the vendor, so they can disable user-hostile features and settings that the vendor enables by default."
    },
    {
      "id": 41385873,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T00:21:54",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i don&#x27;t think debian developers are actually prohibited from becoming employees of the vendor, but i think that if they get caught pushing malware, their dd status is likely to be revoked, and the process that allowed them to become dds is likely to be reviewed.  any dd can generally push a change to any debian package to the archive; it&#x27;s a major level of trust.  that&#x27;s why it&#x27;s generally not realistic to try to get one of your employees to become a dd"
    },
    {
      "id": 41386461,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=chungy",
        "name": "chungy"
      },
      "date": "2024-08-29T01:53:27",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "There&#x27;s a large segment of Debian Developers that are also the upstream maintainers&#x2F;owners of various projects. I can&#x27;t think of any paid examples, but volunteer ones are plentiful.<p>Perhaps the Debian project would force a .NET package to come with telemetry disabled by default, but for as long as said employee can abide by the rules of Debian, I don&#x27;t really see any reason it can&#x27;t be done."
    },
    {
      "id": 41372983,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Goz3rr",
        "name": "Goz3rr"
      },
      "date": "2024-08-27T21:00:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Even with AOT compilation, as someone who loves C# and also does embedded development in C I would personally say a garbage collected language like C# has no place there."
    },
    {
      "id": 41373012,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T21:03:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "not <i>everything</i> running on a 20-mips 32-bit microcontroller with 2 kibibytes of sram needs to be hard real time and failure-free, and of course the esp32 has <i>hundreds</i> of kibibytes<p>and, correct me if i&#x27;m wrong here, but doesn&#x27;t c# allow you to statically allocate structs just as much as c does?  i&#x27;d think you&#x27;d be able to avoid garbage collection about as much as you want, but i&#x27;ve never written much beyond &#x27;hello, world&#x27; in c#"
    },
    {
      "id": 41373108,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=runevault",
        "name": "runevault"
      },
      "date": "2024-08-27T21:12:34",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "c# has the concept of value types (which structs are), which are stack allocated. Generics have seen more and more instance of getting a Value type like Value Task for stack allocated async objects. But if you add a class as a member of the struct that is going straight to the heap with all the GC stuff that entails"
    },
    {
      "id": 41373614,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:01:50",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "what about global or static variables of value types?  i mean in theory you could stack-allocate whatever you want in your main() method and pass pointers to everything, but that sounds unusably clumsy.  but with global variables and&#x2F;or class variables there would be no problem except for things that inherently require heap allocation by the nature of the problem"
    },
    {
      "id": 41374425,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=neonsunset",
        "name": "neonsunset"
      },
      "date": "2024-08-27T23:33:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Static fields may be placed on Frozen Object Heap. The values of static readonly fields may not exist at all if the ILC&#x27;s static constructor interpreter can pre-initialize it at compile-time and bake the value into binary or codegen. Tiered Compilation does a similar optimization but for all cases. This is with JIT though which is not usable in such environment.<p>Otherwise, statics are placed in a static values array &quot;rooted&quot; by a respective assembly. I believe each value will be contained by a respective box if it&#x27;s not an object. This will be usually located in Gen2 GC heap. My memory is a bit hazy on this specific part.<p>There is no concept of globals in .NET the way you describe it - you simply access static properties and fields.<p>In practice, you will not be running .NET on microcontrollers with existing mainline runtime flavours - very different tradeoffs, much like no-std in Rust. As mentioned, there is NanoFramework. Another one is Meadow: <a href=\"https:&#x2F;&#x2F;www.wildernesslabs.co\" rel=\"nofollow\">https:&#x2F;&#x2F;www.wildernesslabs.co</a> which my friend is using for an automated lab for his PhD thesis.<p>Last mention goes to <a href=\"https:&#x2F;&#x2F;github.com&#x2F;bflattened&#x2F;bflat\">https:&#x2F;&#x2F;github.com&#x2F;bflattened&#x2F;bflat</a> which supports a few interesting targets like UEFI. From the same author there&#x27;s an example of completely runtime-less C# as well: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;MichalStrehovsky&#x2F;zerosharp\">https:&#x2F;&#x2F;github.com&#x2F;MichalStrehovsky&#x2F;zerosharp</a>. It remains a usable language because C# has a large subset of C and features for manual memory management so writing code that completely bypasses allocations is very doable, unlike with other GC-based alternatives."
    },
    {
      "id": 41374726,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-28T00:17:41",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i see, thanks!  that&#x27;s exactly the information i was looking for"
    },
    {
      "id": 41374340,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=runevault",
        "name": "runevault"
      },
      "date": "2024-08-27T23:20:55",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "there are ways (byref I think?) to pass references to stack variables around. And Statics depends. Static const even with stuff like strings would just compile directly into the binary, regular static still has to end up on the Heap."
    },
    {
      "id": 41375622,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=fulafel",
        "name": "fulafel"
      },
      "date": "2024-08-28T03:22:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "GC is fine for many (most?) applications there. For example sensor stuff, display, networking, turning your lights on and off, etc."
    },
    {
      "id": 41373360,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=davidhyde",
        "name": "davidhyde"
      },
      "date": "2024-08-27T21:36:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I believe that you would use dotnet nano for something like that. I used it (or some previous version of it) once many years ago and was very impressed with the productivity and ease of use it offered. Ultimately the lack of community surrounding it drove me to other technologies. Might have changed since then though, who knows!<p><a href=\"https:&#x2F;&#x2F;www.nanoframework.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nanoframework.net&#x2F;</a>"
    },
    {
      "id": 41372175,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T19:50:43",
      "onstory": {
        "name": "Clay (short for C Layout) is a high performance 2D...",
        "link": "https://news.ycombinator.com/item?id=41338946"
      },
      "text": "yeah, i have the same problem.  it&#x27;s been hanging for almost an hour for me now.  probably an infinite-loop bug rather than a working but slow algorithm?"
    },
    {
      "id": 41372104,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T19:46:47",
      "onstory": {
        "name": "Clay (short for C Layout) is a high performance 2D...",
        "link": "https://news.ycombinator.com/item?id=41338946"
      },
      "text": "i&#x27;m guessing that this is because safari doesn&#x27;t allow the layout code (or anything else) to run while it&#x27;s scrolling, which with normal websites (which don&#x27;t use fixed positioning for everything) results in <i>less</i> janky experiences, and was famously critically important to get reasonable scrolling on the original iphone.  it doesn&#x27;t matter how fast clay&#x27;s algorithms are if they&#x27;re not allowed to run<p>(otoh when i try to load the web page it doesn&#x27;t work at all, not even jankily, if we&#x27;re talking about <a href=\"https:&#x2F;&#x2F;www.nicbarker.com&#x2F;clay\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nicbarker.com&#x2F;clay</a>)"
    },
    {
      "id": 41372382,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=jb1991",
        "name": "jb1991"
      },
      "date": "2024-08-27T20:08:54",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The problem is not isolated to the iPhone. I&#x27;m using Firefox on a Macbook, still very stuttering site."
    },
    {
      "id": 41372572,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T20:25:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "aha, thanks for the data point!  i guess i was wrong; it must be the clay algorithms"
    },
    {
      "id": 41372067,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T19:44:24",
      "onstory": {
        "name": "Clay (short for C Layout) is a high performance 2D...",
        "link": "https://news.ycombinator.com/item?id=41338946"
      },
      "text": "when you say &#x27;does not scale well&#x27;, are you talking about the algorithm&#x27;s performance or about some kind of maintainability concern?"
    },
    {
      "id": 41383054,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=jacobp100",
        "name": "jacobp100"
      },
      "date": "2024-08-28T19:06:35",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Maintainability. Think about having a list. You add constraints between all the rows etc. then remove a row in the middle. Now you have to update all the constraints"
    },
    {
      "id": 41385901,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T00:24:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i think that in cassowary that involves removing roughly one constraint for each thing on the row, then adding a new constraint for the newly adjacent rows?  then because it uses an incremental solver it can reuse the part of the previous solution for the rows above the deleted row, just recomputing the positions of the rows below<p>but that&#x27;s a question of performance.  &#x27;maintainability&#x27; would be removing the code that adds the row to the list, which is trivial with cassowary"
    },
    {
      "id": 41372049,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T19:43:28",
      "onstory": {
        "name": "Clay (short for C Layout) is a high performance 2D...",
        "link": "https://news.ycombinator.com/item?id=41338946"
      },
      "text": "i don&#x27;t know when visix galaxy existed, but springs and struts are how tex did text layout in 01978 and how tex and latex still do it today.  &#x27;visix&#x27; sounds like a name from after 01978, though i could be wrong"
    },
    {
      "id": 41372881,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HexDecOctBin",
        "name": "HexDecOctBin"
      },
      "date": "2024-08-27T20:51:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Huh, interesting. I do keep planning to read the TeX book, just can&#x27;t find the time."
    },
    {
      "id": 41374054,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:43:39",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i read it when i was 18 and taking motel reservations in a call center. it has 27 chapters totaling 304 pages, thus averaging 11.3 pages per chapter.  you can read a chapter each night before bed in 15 minutes and you&#x27;ll be done by october.  doing the exercises will take you longer, of course, and probably require you to sudo apt install texlive (i didn&#x27;t have a computer to do that on)"
    },
    {
      "id": 41375733,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HexDecOctBin",
        "name": "HexDecOctBin"
      },
      "date": "2024-08-28T03:44:48",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It&#x27;s more about being busy reading other more immediately important stuff :)"
    },
    {
      "id": 41385940,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-29T00:30:41",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "like hn comments, amirite"
    },
    {
      "id": 41371971,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T19:37:29",
      "onstory": {
        "name": "Bootstrappable Builds",
        "link": "https://news.ycombinator.com/item?id=41368835"
      },
      "text": "i think this is a good approach, but almost everyone who has tried it has gotten bogged down in the usual problems with forth, where you get distracted by writing clever code instead of writing fairly boring, straightforward code that gets the job done in a dumb way.  and where things fail in difficult-to-debug ways, so you spend a lot of time debugging.  virgil dupras&#x27;s duskos is the only candidate for an exception to this rule.  hopefully you will write a second one!"
    },
    {
      "id": 41373125,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=nine_k",
        "name": "nine_k"
      },
      "date": "2024-08-27T21:13:50",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I see. I would keep the Forth code to a minimum necessary to implement simple things, with an emphasis on things being understandable and hence auditable. Smart code is good; clever, bad."
    },
    {
      "id": 41373641,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T22:04:13",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "easier said than done; i look forward to seeing your code ;)"
    },
    {
      "id": 41364760,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T05:19:44",
      "onstory": {
        "name": "NSA releases 1982 Grace Hopper lecture",
        "link": "https://news.ycombinator.com/item?id=41356528"
      },
      "text": "none of these have mmus, even the stm32g030 is a cortex-m0+"
    },
    {
      "id": 41365305,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=fragmede",
        "name": "fragmede"
      },
      "date": "2024-08-27T07:31:36",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "dang. thanks for the correction. Looks like the cheapest chip with an MMU is the Allwinner F1C100S which is $2.20 in quantity."
    },
    {
      "id": 41369635,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T16:45:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "happy to explore with you!<p>mmus are a performance hack; they make your memory-protected code run faster than if you use a jit compiler that inserts memory bounds checks.  but suppose running code that way costs you a factor of 10× in performance.  so maybe your 30-dhrystone-mips processor (<a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU-SOC_PUYA-PY32F002AL15S6TU_C5292060.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU...</a>, say, or <a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU-SOC_Infineon-Cypress-Semicon-CY8C4045FNI-DS400T_C2952624.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU...</a> for 2×) performs roughly like a 3 dhrystone mips processor.  if we believe <a href=\"https:&#x2F;&#x2F;netlib.org&#x2F;performance&#x2F;html&#x2F;dhrystone.data.col0.html\" rel=\"nofollow\">https:&#x2F;&#x2F;netlib.org&#x2F;performance&#x2F;html&#x2F;dhrystone.data.col0.html</a> that&#x27;s roughly the performance of a sun 3&#x2F;160, an amiga 2000, or a 40 megahertz amd clone 80386 pc (though much slower than an intel 386)<p>that&#x27;s much faster than many multiuser machines i&#x27;ve used<p>the promise of java (and oberon) was that such large runtime overhead would be unnecessary with better static checking, and j2me and oberon seem to have largely borne that out<p>the bigger issue is i think that cheap microcontrollers don&#x27;t have much ram or off-chip bandwidth.  if you want a megabyte on-chip, you end up with things like <a href=\"https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;stmicroelectronics&#x2F;STM32H750VBT6&#x2F;9453371\" rel=\"nofollow\">https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;stmicroelectronic...</a> (a 480-megahertz cortex-m7 with 128 kibibytes of flash and a mebibyte of ram for usd11.27), <a href=\"https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;infineon-technologies&#x2F;CY8C624AFNI-S2D43T&#x2F;16516853\" rel=\"nofollow\">https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;infineon-technolo...</a> (a dual-core 150-megahertz cortex-m0+ with 2 mebibytes of flash and a mebibyte of ram for usd12.92), <a href=\"https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;nxp-usa-inc&#x2F;MIMXRT1062DVL6B&#x2F;13635843\" rel=\"nofollow\">https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;nxp-usa-inc&#x2F;MIMXR...</a> (a 600-megahertz cortex-m7 using external program memory and a mebibyte of ram for usd14.48), or <a href=\"https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;renesas-electronics-corporation&#x2F;R5F572NNHDFP-30&#x2F;12750997\" rel=\"nofollow\">https:&#x2F;&#x2F;www.digikey.com&#x2F;en&#x2F;products&#x2F;detail&#x2F;renesas-electroni...</a> (a 240-megahertz renesas rx72n with 4 mebibytes of flash and a mebibyte of ram for usd20.85)<p>i&#x27;m pretty sure none of these have mmus either but i forget the rx architecture<p>a whole esp32 module like <a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Development-Boards-Kits_LCKFB-LCKFB-ESP32S3R8N8_C20626143.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Development-Boards-Kits_...</a> is cheaper and has more ram though.  that one has 8 megs of psram and costs usd4.93"
    },
    {
      "id": 41361975,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T20:49:31",
      "onstory": {
        "name": "NSA releases 1982 Grace Hopper lecture",
        "link": "https://news.ycombinator.com/item?id=41356528"
      },
      "text": "all the following prices are for &quot;under 100 dollars&quot; quantities<p><a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU-SOC_Infineon-Cypress-Semicon-CY8C4045FNI-DS400T_C2952624.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU...</a> 1.5¢, 32 kibibytes in-application-programmable flash, 4 kibibytes sram, 48 megahertz, nearly 1 32-bit arm instruction per clock<p><a href=\"https:&#x2F;&#x2F;jlcpcb.com&#x2F;partdetail&#x2F;NyquestTech-NY8A051H&#x2F;C5143390\" rel=\"nofollow\">https:&#x2F;&#x2F;jlcpcb.com&#x2F;partdetail&#x2F;NyquestTech-NY8A051H&#x2F;C5143390</a> 1.58¢, 1 kibiword otp prom, 48 bytes of ram, 20 megahertz, nearly 1 8-bit pic16-like instruction per clock, english datasheet <a href=\"https:&#x2F;&#x2F;www.nyquest.com.tw&#x2F;upload&#x2F;2024_02_293&#x2F;NY8A051H_v1.6.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nyquest.com.tw&#x2F;upload&#x2F;2024_02_293&#x2F;NY8A051H_v1.6....</a><p><a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontroller-Units-MCUs-MPUs-SOCs_PADAUK-Tech-PMC251-S14_C317604.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontroller-Units-MC...</a> 10.5¢, 1 kibiword otp prom, 60 bytes ram, two hardware threads (&#x27;fppa&#x27;) context-switching every cycle so you can get better real-time response, 16 megahertz, nearly 1 8-bit instruction per clock.  english datasheet <a href=\"https:&#x2F;&#x2F;www.padauk.com.tw&#x2F;upload&#x2F;doc&#x2F;PMC251%20datasheet%20V0.12_EN.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;www.padauk.com.tw&#x2F;upload&#x2F;doc&#x2F;PMC251%20datasheet%20V0...</a><p><a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU-SOC_PUYA-PY32F002AL15S6TU_C5292060.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU...</a> 8.7¢, 20 kibibytes flash, 3 kibibytes ram, 24 megahertz, nearly 1 32-bit arm instruction per clock.  english datasheet <a href=\"https:&#x2F;&#x2F;download.py32.org&#x2F;Datasheet&#x2F;en&#x2F;PY32F002A%C2%A0datasheet%C2%A0Rev.0.2_EN.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;download.py32.org&#x2F;Datasheet&#x2F;en&#x2F;PY32F002A%C2%A0datash...</a><p><a href=\"https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU-SOC_WCH-Jiangsu-Qin-Heng-CH32V003J4M6_C5346354.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.lcsc.com&#x2F;product-detail&#x2F;Microcontrollers-MCU-MPU...</a> 12.45¢, 16 kibibytes of flash, 2 kibibytes sram, 24 megahertz, nearly 1 32-bit risc-v (rv32ec) instruction per clock<p>these are generally much lower power than the 8021, but really the place to look for power consumption is ambiq; these are all conventional cmos rather than the subthreshold logic ambiq uses<p>they also incorporate a lot more peripherals"
    },
    {
      "id": 41364750,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T05:18:41",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i thought i&#x27;d check out the 8021 to see how big the difference is.  it&#x27;s bigger than i imagined<p><a href=\"https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Intel_MCS-48\" rel=\"nofollow\">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Intel_MCS-48</a> says it&#x27;s a cut-down 8048.  the 8048 itself has a max clock speed 11 megahertz, 15 clocks per machine cycle, with about 70% of instructions taking one machine cycle, 30% taking two, for about half a mip.  not vax mips, tho, an 8-bit mip.  there&#x27;s a manual for the chip family at <a href=\"https:&#x2F;&#x2F;manualsdump.com&#x2F;en&#x2F;download&#x2F;manuals&#x2F;intel-mcs-48&#x2F;253276\" rel=\"nofollow\">https:&#x2F;&#x2F;manualsdump.com&#x2F;en&#x2F;download&#x2F;manuals&#x2F;intel-mcs-48&#x2F;253...</a><p>the biggest omission is that they cut it down from 28 to 21 i&#x2F;o pins and eliminated interrupts, which would be a big loss in a modern microcontroller, but it was nmos rather than cmos, so you&#x27;re looking at unholy power consumption anyway; 40 milliamps (typ., p. 192&#x2F;478 (6-49)) at 5 volts is 200 milliwatts. but they also cut the clock speed, the minimal machine cycle time on the 8021 is listed as 10 μs (with a 3 megahertz crystal) rather than the 8048&#x27;s 2.5μs or the 8049&#x27;s 1.36μs.  so you get 0.07 8-bit mips. it uses dynamic logic and dynamic ram to save space so you can&#x27;t clock it at less than 20% of that, so you can&#x27;t do low-power sleep, ever<p>they also omitted the subtract instruction, which the 8048 doesn&#x27;t have either.  i guess you can use cpl, inc, add.  (i see that what the manual suggests is cpl, add, cpl.) there&#x27;s enough space for multiply and divide subroutines but they ain&#x27;t gonna be fast<p>also, you can forget about programming an 8021&#x27;s program memory.  it&#x27;s mask-programmable only; you have to do your test programming on an 8748 before you place your order with intel for a batch of 8021s with a custom silicon mask encoding your 1024 bytes of already tested and debugged firmware.  so those 42-cent∆ prices were necessarily in rather large batches. the 8051 and 8048&#x2F;8049 had an &#x27;ea&#x27; pin you can pull high to get it to execute code from external memory instead, but i don&#x27;t think the 8021 did; the manual says, &quot;no external rom expansion capability is provided.&quot;<p>0.07 8-bit mips is about 0.005 dhrystone mips, although i think the 8021 is too small to run dhrystone.  the cypress chip i linked above is about 60 dhrystone mips at 48 megahertz, so about 12000 times faster, for about a 25× lower price.  it also has 4096 bytes of ram instead of 64 (16×), 32 kibibytes of nonvolatile program memory instead of 1 (32×), plus 8 kibibytes of rom, and you can program the flash in-application (<i>i.e.</i>, under the control of the program it&#x27;s running).  it has a hardware multiplier, which is about a 10× additional speedup for dsp type stuff.  in deep sleep it uses 2.5μamps.  at full speed it&#x27;s a bit of a power hog by current standards, slurping a hefty 13 milliamps (at 1.8 volts if you like, so 23 milliwatts, almost ⅛ the 8021, but if you&#x27;re in deep sleep most of the time you can go another 5000× lower).  and it&#x27;s 1.6mm×2mm.  and you can program it in c.  it has only 9 gpio pins, though!<p>despite nominally being a psoc the cypress chip has no analog peripherals, not even a comparator.  it does have internal oscillators (with no external components), pwm generation, i2c, spi, uart, and quadrature input, and its gpio pins have seven drive strength modes<p>so depending on whether cpu speed or memory space is the bigger bottleneck for your application, price&#x2F;performance has improved between 400× and 300000× since the 8021.  for things that were constrained by battery life or reprogrammability, the difference isn&#x27;t quantitative, it&#x27;s just that the 8021 couldn&#x27;t do the job at all<p>in the metric of interest to hopper, though, which was computers per buck rather than mips per buck, it&#x27;s only about 25× better than then<p>______<p>∆ <a href=\"https:&#x2F;&#x2F;data.bls.gov&#x2F;cgi-bin&#x2F;cpicalc.pl?cost1=.13&amp;year1=198206&amp;year2=202407\" rel=\"nofollow\">https:&#x2F;&#x2F;data.bls.gov&#x2F;cgi-bin&#x2F;cpicalc.pl?cost1=.13&amp;year1=1982...</a> says 42¢"
    },
    {
      "id": 41361556,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T20:21:02",
      "onstory": {
        "name": "NSA releases 1982 Grace Hopper lecture",
        "link": "https://news.ycombinator.com/item?id=41356528"
      },
      "text": "my old boss worked at a fairchild site.  he said it was now a superfund site because, yes, that&#x27;s what they did"
    },
    {
      "id": 41361522,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T20:18:43",
      "onstory": {
        "name": "NSA releases 1982 Grace Hopper lecture",
        "link": "https://news.ycombinator.com/item?id=41356528"
      },
      "text": "they did strengthen the s-boxes against differential cryptanalysis, yes, but since 02004 we have evidence that they <i>also</i> sabotaged it as part of a deliberate policy they&#x27;d put in place in 01968: <a href=\"https:&#x2F;&#x2F;blog.cr.yp.to&#x2F;20220805-nsa.html\" rel=\"nofollow\">https:&#x2F;&#x2F;blog.cr.yp.to&#x2F;20220805-nsa.html</a>"
    },
    {
      "id": 41362170,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-26T21:04:56",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The sleight of hand here is to equate publicly reducing the key size, which was known (presumably at the time as well) to be a weakening of the system, with a supposed weakness injected cryptically into the S-boxes --- which we now know is the opposite of what happened.<p>Further, the truncated version of DES that got standardized <i>far</i> outlasted its expected lifetime --- the National Bureau of Standards expected DES to have a useful lifetime of about 5 years. And even at the time it was understood that you could expand the keysize by tripling up the DES core.<p>I think there&#x27;s a really big difference between publicly weakening a standard, in effect telling the world &quot;we want a standard that is adequate for commercial purposes but inadequate for military purposes, so as to retain our national edge&quot;, and doing what they did with Dual-EC, where it was impossible (apparently) for people to reason about what NSA was up to."
    },
    {
      "id": 41370366,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=aftbit",
        "name": "aftbit"
      },
      "date": "2024-08-27T17:37:23",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I never understood the Dual-EC backdoor. What was the point? Who would be dumb enough to use that as their CSPRNG when so many simpler, faster, and less sus options were available?<p>I supposed they did (allegedly) pay RSA Security to make this the default choice in BSAFE but that seems like an awful lot of work to hack one product."
    },
    {
      "id": 41371034,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T18:28:41",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "That was my take too, but in fairness to everyone else who was right about this, once you stepped back and looked at the design for what it was, rather than as a weird concoction that happened to spit out random numbers, it was extremely obvious what the purpose of the design was. Another thing happening with me and Dual EC: I just know a lot more about cryptography today than I did 13 years ago. (I&#x27;m not a cryptographer; I&#x27;m a vulnerability person that happens to specialize a bit in cryptography vulnerabilities. It&#x27;s a great rhetorical hedge.)<p>Another thing I was very certain (and certainly wrong) about was that no competent team was using BSAFE in 2010. The more I&#x27;ve learned about cryptography the less confidence I&#x27;ve held onto in industry cryptography practices outside of Google, Apple, and Microsoft. I would have assumed the major networking vendors were playing at roughly the same level. Yikes, no."
    },
    {
      "id": 41362950,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-26T22:44:54",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; and doing what they did with Dual-EC, where it was impossible (apparently) for people to reason about what NSA was up to.<p>Schneier was clearly able to reason about what NSA was up to, and told everyone in 2007 not to use Dual-EC, 6 years before the Snowden revelations.<p>I believe you have admitted that you thought that “Dual-EC has a backdoor” was a wild conspiracy theory until the Snowden revelations?  Which makes the “impossible (apparently)” part a classic case of projection."
    },
    {
      "id": 41363000,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-26T22:53:06",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The (apparently) was a dunk on me.<p>(I thought nobody should use Dual EC! But that was my reason for thinking it wasn&#x27;t an NSA backdoor, because it was too dumb to be one. I underestimated the industry&#x27;s capacity for &quot;dumb&quot;. Also: I was dumb! I am dumb a lot.)"
    },
    {
      "id": 41363064,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-26T23:03:15",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "And now you believe it’s impossible for any of the NIST PQC submissions to have been backdoored or weakened. I feel safer already.  :D"
    },
    {
      "id": 41363137,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-26T23:16:37",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "NIST didn&#x27;t design any of the PQC submissions. It did design Dual EC."
    },
    {
      "id": 41363206,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-26T23:31:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "NIST didn’t design Dual-EC, NSA did.  But NIST did the really hard work, which involved slapping their organization’s name on it, and not asking any inconvenient questions.<p>Thankfully we found a better way that ensures cryptographic security, which is to get former NSA interns to write the PQC standards, instead of proper NSA employees."
    },
    {
      "id": 41363266,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-26T23:41:19",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "As a shorthand for this site, I&#x27;m not distinguishing between the two organizations. Which former NSA interns are you talking about? You can get their names from the pq-crystals.org site. Which one should we not be trusting?"
    },
    {
      "id": 41363374,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T00:01:45",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Is it maybe Tancrede Lepoint? He always seemed shady to me. Or Peter Schwabe?"
    },
    {
      "id": 41363393,
      "lvl": 8,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-27T00:05:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "A wonderful question that exposes me to legal action if I answer.<p>A better question:  why do you think so many of your cryptographic feline friendz were so excited about isogenies for the past decade?  Where do you think they all obtained that identical enthusiasm from?  Why do you think SIKE made it so far in the contest and only got eliminated through luck?"
    },
    {
      "id": 41363482,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T00:22:25",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Your theory here is that NSA coordinated an action whereby the PQC standard selected could be broken by anybody in the world with a Python script, based on research disclosed to the public in the 1990s.<p>I&#x27;m guessing this isn&#x27;t a conversation that&#x27;s going to take us into Richelot isogenies."
    },
    {
      "id": 41363534,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-27T00:32:40",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "You obviously know that the Python script wasn’t submitted to NIST along with the draft standard.<p>Is Dual-EC-DRBG fine because we never saw the FVEY Python exploit that breaks it?<p>I think my theory here is that NSA coordinated an action whereby they figured no one was reading obscure algebraic geometry papers from 1997.  In our low-attention-span world, it’s not the worst plan.<p>(Hell, folks didn’t realize TAOSSA contained 0day for a long time.  Simply putting something in front of the public doesn’t mean they’ll read or comprehend it.)"
    },
    {
      "id": 41363566,
      "lvl": 11,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T00:35:49",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It is literally the worst plan, because it leaves every PQC-protected system in the world exposed to <i>everybody in the world</i>. It&#x27;s a theory that depends on NSA just wanting to watch the world burn.<p>Dual EC isn&#x27;t broken by an exploit script. It&#x27;s broken <i>with a secret key</i>."
    },
    {
      "id": 41364361,
      "lvl": 12,
      "user": {
        "link": "https://news.ycombinator.com/user?id=philodeon",
        "name": "philodeon"
      },
      "date": "2024-08-27T03:32:58",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; It is literally the worst plan, because it leaves every PQC-protected system in the world exposed to _everybody in the world_.<p>No, it leaves every SIKE-protected system in the world exposed to _everybody who reads obscure algebraic geometry papers from 1997._ We got really lucky that the two dorks who do read those papers decided to share their insights.<p>For all you know, there’s a paper sitting at the Institute For Advanced Study that would let you write a marvelous pq-crystals-shattering Python script, but they’ll never tell you the combination to the safe.<p>(Again: TAOSSA contained 0day exploits, and few noticed for a decade.)"
    },
    {
      "id": 41364610,
      "lvl": 13,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T04:38:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "You seem to believe the only thing preventing people from exploiting Dual EC is not having read the right cryptography papers. No; the reason why that&#x27;s not the case is plainly evident from Dual EC&#x27;s structure (if that were true, the NSA would presumably have no need of Dual EC!). Our premises are too far apart to usefully discuss this."
    },
    {
      "id": 41383173,
      "lvl": 12,
      "user": {
        "link": "https://news.ycombinator.com/user?id=vlovich123",
        "name": "vlovich123"
      },
      "date": "2024-08-28T19:19:17",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I thought PQC systems were wrapping classical encryption within the PQC protection so even if you broke PQC you&#x27;d still be left having to crack classical. Of course some hypothetical future QC could then accomplish this task so the future proofing goal of PQC would be violated."
    },
    {
      "id": 41387811,
      "lvl": 13,
      "user": {
        "link": "https://news.ycombinator.com/user?id=zahllos",
        "name": "zahllos"
      },
      "date": "2024-08-29T06:02:12",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "The proposal is to do exactly this (hybrid schemes using a pre and a post quantum scheme).<p>However in this context the debate is just over the PQ scheme (not the overall system). Also, NSA are not planning to mandate a hybrid system for government use. Others may do the same."
    },
    {
      "id": 41366121,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=lvh",
        "name": "lvh"
      },
      "date": "2024-08-27T10:48:01",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I don&#x27;t know if I count as a &quot;feline friend&quot;, but: SIDH kept the DH shape. Being able to upgrade the protocols we had relatively closely is appealing. &quot;Structure is useful but seems precarious&quot; wasn&#x27;t exactly secret knowledge."
    },
    {
      "id": 41363781,
      "lvl": 9,
      "user": {
        "link": "https://news.ycombinator.com/user?id=dadrian",
        "name": "dadrian"
      },
      "date": "2024-08-27T01:17:11",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Of the SCW hosts, I&#x27;m actually the NSA plant. You got me."
    },
    {
      "id": 41364128,
      "lvl": 10,
      "user": {
        "link": "https://news.ycombinator.com/user?id=tptacek",
        "name": "tptacek"
      },
      "date": "2024-08-27T02:37:30",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "What people on these threads aren&#x27;t prepared to grok is that cryptography engineers (even the older ones) are gothy af, and the isogeny graph diagrams all looked like black magic stuff out of the Lesser Key of Solomon. Sorry, there isn&#x27;t more to it than that."
    },
    {
      "id": 41357232,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T14:05:31",
      "onstory": {
        "name": "Olivetti Programma 101: At the Origins of the Pers...",
        "link": "https://news.ycombinator.com/item?id=41351009"
      },
      "text": "if we believe the commenter below about ebay prices, you might be able to buy a new car if you sell it"
    },
    {
      "id": 41357012,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T13:40:46",
      "onstory": {
        "name": "Olivetti Programma 101: At the Origins of the Pers...",
        "link": "https://news.ycombinator.com/item?id=41351009"
      },
      "text": "would you say it&#x27;s more like lisp or more like forth?  this has been a topic of argument"
    },
    {
      "id": 41359564,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=fortran77",
        "name": "fortran77"
      },
      "date": "2024-08-26T17:33:12",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It&#x27;s more like forth if I had to pick one. Though it is very lispy -- you can pass functions as objects, etc.<p>I was quite good at programming in it back in the day."
    },
    {
      "id": 41361710,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T20:30:33",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "you may enjoy my friend nathan&#x27;s <a href=\"http:&#x2F;&#x2F;postscriptcode.com&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;postscriptcode.com&#x2F;</a><p>he says it&#x27;s more like forth, i disagree"
    },
    {
      "id": 41353465,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T02:26:05",
      "onstory": {
        "name": "Writing a Rust compiler in C",
        "link": "https://news.ycombinator.com/item?id=41351446"
      },
      "text": "that&#x27;s interesting!  what kind of os did you write?  it sounds like you didn&#x27;t think supporting the linux system call interface was a good idea, or perhaps even feasible?"
    },
    {
      "id": 41353947,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=0x0203",
        "name": "0x0203"
      },
      "date": "2024-08-26T04:10:43",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It&#x27;s got a fairly linux like ABI, though we don&#x27;t aim or care to be 1-1 compatible, and it has&#x2F;requires our own custom interfaces. Porting most software that was written for linux is usually pretty easy. But we can&#x27;t just run binaries compiled for linux on our stuff. So for languages that require a compiler written in its own language where they don&#x27;t supply cross compilers or boot strapping compilers built with the lowest common denominator (usually c or c++), things can get a little trickier."
    },
    {
      "id": 41358092,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T15:28:28",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "interesting!  what applications are you writing it for?"
    },
    {
      "id": 41353441,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-26T02:22:08",
      "onstory": {
        "name": "Olivetti Programma 101: At the Origins of the Pers...",
        "link": "https://news.ycombinator.com/item?id=41351009"
      },
      "text": "the thing i like most about these is that, though normally they&#x27;re executing their machine code from the keyboard like a normal calculator, the &#x27;v&#x27;, &#x27;w&#x27;, &#x27;y&#x27;, and &#x27;z&#x27; keys jump to user-defined machine code addresses and start executing code from memory.  i think that&#x27;s an inspiring way to provide an application with programmable function keys on a really extremely limited computer, far too small for even forth"
    },
    {
      "id": 41344451,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T04:43:51",
      "onstory": {
        "name": "Generating Mazes",
        "link": "https://news.ycombinator.com/item?id=41327933"
      },
      "text": "these are pretty! are they from depth-first search?"
    },
    {
      "id": 41344486,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=KingOfCoders",
        "name": "KingOfCoders"
      },
      "date": "2024-08-25T04:52:36",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Thanks!I sadly no longer remember and have the code no longer it seems."
    },
    {
      "id": 41344342,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T04:16:36",
      "onstory": {
        "name": "Serpent OS Pre-Alpha-0 released",
        "link": "https://news.ycombinator.com/item?id=41343444"
      },
      "text": "did they implement the linux system call interface or come up with their own?  how linux-compatible is it?  it must be pretty complete if it can run firefox"
    },
    {
      "id": 41345148,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=nolist_policy",
        "name": "nolist_policy"
      },
      "date": "2024-08-25T07:14:26",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt; We&#x27;re creating Serpent OS, an independent Linux distribution built from the ground up to look after itself."
    },
    {
      "id": 41348561,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T16:26:16",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "where did you get that text?  the page linked doesn&#x27;t say &quot;linux&quot; anywhere"
    },
    {
      "id": 41348793,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=1oooqooq",
        "name": "1oooqooq"
      },
      "date": "2024-08-25T16:48:06",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "...there&#x27;s an &quot;about&quot; link at the top..."
    },
    {
      "id": 41344355,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=yjftsjthsd-h",
        "name": "yjftsjthsd-h"
      },
      "date": "2024-08-25T04:20:48",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I&#x27;m pretty sure it <i>is</i> a Linux distro, if slightly unusual userspace."
    },
    {
      "id": 41344394,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T04:30:10",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "why are they calling it an os then?  cosplaying arnold kling?"
    },
    {
      "id": 41344430,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=akovaski",
        "name": "akovaski"
      },
      "date": "2024-08-25T04:38:37",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Its fairly common to refer to Linux distros as an OS, or even include OS in the distro name (Pop!_OS, NixOS, CentOS). Linux is the kernel, and disros add stuff to make a functional operating system."
    },
    {
      "id": 41344718,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=randkyp",
        "name": "randkyp"
      },
      "date": "2024-08-25T05:44:51",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It&#x27;s a trademark thing; there are some prerequisites and manual approval involved before you get to officially name your distro &quot;[Distro Name] Linux&quot;.<p><a href=\"https:&#x2F;&#x2F;www.linuxfoundation.org&#x2F;legal&#x2F;the-linux-mark\" rel=\"nofollow\">https:&#x2F;&#x2F;www.linuxfoundation.org&#x2F;legal&#x2F;the-linux-mark</a>"
    },
    {
      "id": 41369746,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-27T16:52:39",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "that&#x27;s not much of an excuse for pretending to have written an os; the only real requirement in <a href=\"https:&#x2F;&#x2F;www.linuxfoundation.org&#x2F;legal&#x2F;sublicense-agreement\" rel=\"nofollow\">https:&#x2F;&#x2F;www.linuxfoundation.org&#x2F;legal&#x2F;sublicense-agreement</a> is that you acknowledge that linus torvalds owns the linux trademark"
    },
    {
      "id": 41344723,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=gertop",
        "name": "gertop"
      },
      "date": "2024-08-25T05:45:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "ChromeOS<p>SteamOS<p>PopOS<p>ElementaryOS<p>EndeavourOS<p>ZorinOS<p>CentOS<p>SerpentOS<p>Cosplayers, all of them!"
    },
    {
      "id": 41345401,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=written-beyond",
        "name": "written-beyond"
      },
      "date": "2024-08-25T08:01:42",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "MacOS"
    },
    {
      "id": 41346239,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=dpassens",
        "name": "dpassens"
      },
      "date": "2024-08-25T10:36:52",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "MacOS is not a Linux distribution, though."
    },
    {
      "id": 41346288,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=Vinnl",
        "name": "Vinnl"
      },
      "date": "2024-08-25T10:47:22",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Well why are they calling it an OS then!"
    },
    {
      "id": 41347588,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=yjftsjthsd-h",
        "name": "yjftsjthsd-h"
      },
      "date": "2024-08-25T14:36:01",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Because it is one? Linux distros are a subset of OSs."
    },
    {
      "id": 41346948,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=samstave",
        "name": "samstave"
      },
      "date": "2024-08-25T12:53:24",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Because at Apple, everyone was under the <i>O</i>ntological <i>S</i>upposition that Jobs was the second coming."
    },
    {
      "id": 41348565,
      "lvl": 5,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T16:26:53",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "macos is an actual operating system, a variant of mach"
    },
    {
      "id": 41348708,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=nequo",
        "name": "nequo"
      },
      "date": "2024-08-25T16:39:55",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It is true that macOS is a bad example here because it is not using a Linux kernel.<p>But Apple also names operating systems that use the same kernel different &quot;OSes&quot;: iOS and iPadOS share a kernel with macOS, and for all I can tell, so do watchOS and tvOS.<p>An operating system consists of both a kernel and a userland. The Linux kernel by itself does not make an OS. I think this makes it legitimate to call CentOS, NixOS, SerpentOS, iOS, watchOS, etc., OSes."
    },
    {
      "id": 41366343,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=ChocolateGod",
        "name": "ChocolateGod"
      },
      "date": "2024-08-27T11:24:08",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt;  iOS and iPadOS share a kernel with macOS, and for all I can tell, so do watchOS and tvOS.<p>Even worse is that iPadOS and iOS are effectively the same operating system, one ships with a phone dialer and the other ships with UI tweaks for tablets. I would not be shocked if they are built from the same source tree."
    },
    {
      "id": 41348909,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T16:56:24",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "i think the ios and centos people are putting on airs because they wish they were ken thompson"
    },
    {
      "id": 41349294,
      "lvl": 6,
      "user": {
        "link": "https://news.ycombinator.com/user?id=written-beyond",
        "name": "written-beyond"
      },
      "date": "2024-08-25T17:31:44",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Without being too pedantic, MacOS was to Unix what ChromeOS&#x2F;AndroidOS is to Linux so I stand by my comment."
    },
    {
      "id": 41349680,
      "lvl": 7,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T18:11:31",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "unlike, say, illumos, macos doesn&#x27;t contain anything genetically descended from the v6 unix kernel; the darwin kernel is mach, with chunks of freebsd grafted into it, chunks that carefully reimplemented without copying the functionality in original unix<p>by contrast, &#x27;chromeos&#x27; and android run on fairly normal linux.  they even keep up with linus&#x27;s tree, and though they do have their own patches, they try to get them merged back into linus&#x27;s tree"
    },
    {
      "id": 41345793,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=HeckFeck",
        "name": "HeckFeck"
      },
      "date": "2024-08-25T09:14:28",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I&#x27;d like to interject for a moment..."
    },
    {
      "id": 41346598,
      "lvl": 4,
      "user": {
        "link": "https://news.ycombinator.com/user?id=exe34",
        "name": "exe34"
      },
      "date": "2024-08-25T11:47:14",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "I love that you don&#x27;t even need to write the rest of the comment! I bet even LLMs know where you were going :-)"
    },
    {
      "id": 41344294,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T04:06:34",
      "onstory": {
        "name": "“YOLO” is not a valid hash construction",
        "link": "https://news.ycombinator.com/item?id=41310319"
      },
      "text": "bencode was designed to solve the canonicality problem. so is asn.1 cer. but it is sufficient to have an unambiguous encoding to prevent the vulnerabilities in this post; nonunique encodings will only produce interoperability problems, not security holes"
    },
    {
      "id": 41344164,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T03:38:16",
      "onstory": {
        "name": "Generating Mazes",
        "link": "https://news.ycombinator.com/item?id=41327933"
      },
      "text": "mike bostock did this fantastic visualization of maze generation algorithms a few years ago, including wilson&#x27;s algorithm but not aldous–broder: <a href=\"https:&#x2F;&#x2F;bost.ocks.org&#x2F;mike&#x2F;algorithms&#x2F;#maze-generation\" rel=\"nofollow\">https:&#x2F;&#x2F;bost.ocks.org&#x2F;mike&#x2F;algorithms&#x2F;#maze-generation</a><p>i wrote a minimal roguelike a couple of weeks ago in forth: <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;wmaze.fs\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;wmaze.fs</a> (2-minute asciicast at <a href=\"https:&#x2F;&#x2F;asciinema.org&#x2F;a&#x2F;672405\" rel=\"nofollow\">https:&#x2F;&#x2F;asciinema.org&#x2F;a&#x2F;672405</a>, or you can run it in gforth) and tried to generate the level as a perfect maze with an algorithm related to these, but just visiting the walls in a random order, which doesn&#x27;t produce an unbiased maze<p>however, in rogue, and in wmaze, walls occupy a whole grid cell.  so i decided to remove walls unless they either connected an open cell above to one below that it was already connected to, or an open cell to the left to one to the right that it was already connected to, because i had decided to not permit diagonal movement. but this turned out to have two unexpected effects:<p>1. sometimes it would connect a cell, say, to the left with one above it that it was already connected to.  this results in a maze that isn&#x27;t quite perfect, which i think is an improvement<p>2. sometimes a cell will occur with walls on all four sides of it which are not removed. this is fine unless treasure or the player spawns there, in which case the game is impossible<p>so i need to tweak the algorithm, but i otherwise really like the meandering mazes it produces, and i think the extra connections from point 1 above give the dungeons a desirable nonuniformity and keep the mazes from being too difficult<p>visiting walls in random order has the same effect as prim&#x27;s algorithm with random weights (or equivalently kruskal&#x27;s), but in my case obviously i broke that correspondence because my walls aren&#x27;t graph arcs.  i can recommend doing that on a proper graph as a perfect maze generation algorithm, which is what i did in 02018 in <a href=\"http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;unimaze.go\" rel=\"nofollow\">http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;unimaze.go</a>, which is much more readable, if a bit repetitive and longwinded"
    },
    {
      "id": 41347149,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=YeGoblynQueenne",
        "name": "YeGoblynQueenne"
      },
      "date": "2024-08-25T13:27:53",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "&gt;&gt; however, in rogue, and in wmaze, walls occupy a whole grid cell.<p>I think I know what you mean and I had the same kind of problem: pretty much evey maze-generation algorithm assumes the map is initially a grid of cells with four walls and proceeds by removing those walls one-by-one, systematically.<p>The problem you had, and that I had in my project, is that your grid is made up of single characters, say like this:<p><pre><code>  ■ ■ ■ ■  ■ ■ ■ ■  ■ ■ ■ ■  ■ ■ ■ ■</code></pre>Where &quot;■&quot; is a wall. It is not clear how you can &quot;remove a wall&quot; from this grid. If you just replace each wall character with a floor character, say, &quot;□&quot;, you have removed _four_ walls, not just one. Then if you use any of the standard maze-generation algos you end up with &quot;maze snow&quot;, like this:<p><pre><code>  □ □ □ ■ □ □ □ □   □ ■ □ □ □ ■ □ ■   □ □ □ ■ ■ □ ■ □   □ ■ □ □ □ □ □ □   □ □ □ ■ □ ■ □ ■   □ ■ □ □ □ ■ □ □   □ □ □ ■ □ □ □ ■   □ ■ □ □ □ ■ □ □ </code></pre>One way to work around this that I found online is to implicitly pad every wall with an extra character, so that for example, if you carved a two-step path starting at the top-left corner of the fully blocked maze above and going to the right, it would look like this:<p><pre><code>  ■ ■ ■ ■  □ □ ■ ■  ■ ■ ■ ■  ■ ■ ■ ■</code></pre>Instead of like this:<p><pre><code>  □ □ ■ ■  ■ ■ ■ ■  ■ ■ ■ ■  ■ ■ ■ ■</code></pre>I didn&#x27;t like that because it effectively halves the dimensions of every maze.  So I had a cunning plan and came up with an alternative that models an agent moving through a grid representing a maze and &quot;discovering&quot; the maze as it goes, as usual, but with some constraints that ensure the maze never loops back to itself. I&#x27;m working in Prolog so you might find it as hard to read my code as I found it to read your Forth :) but it&#x27;s here anyway:<p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;stassa&#x2F;ijclr_2024_experiments&#x2F;blob&#x2F;6cf3cc73a2dd3e8209490aa2cd4855a6d853c2b1&#x2F;louise&#x2F;lib&#x2F;grid_master&#x2F;data&#x2F;environments&#x2F;basic_environment&#x2F;maze_generator.pl\">https:&#x2F;&#x2F;github.com&#x2F;stassa&#x2F;ijclr_2024_experiments&#x2F;blob&#x2F;6cf3cc...</a><p>The idea is that, at any timestep, an agent navigating a grid is observing the following cells, with the agent centered on 1&#x2F;1:<p><pre><code>  0&#x2F;0  1&#x2F;0  2&#x2F;0  0&#x2F;1 &gt;1&#x2F;1&lt; 2&#x2F;1  0&#x2F;2  1&#x2F;2  2&#x2F;2</code></pre>Where the cells in this 3 × 3 grid (I call it an &quot;observation matrix&quot;) are populated at random, with wall or floor tiles, which may result e.g. in an observation matrix like this:<p><pre><code>  □ ■ ■    □ @ ■   ■ ■ ■ </code></pre>With the agent as a &#x27;@&#x27;. Now it&#x27;s obvious that if the agent moves one step up it will create a four-cell open-space, a &quot;plaza&quot;, like so (there&#x27;s a floor tile under the agent now):<p><pre><code>  □ @ ■    □ □ ■   ■ ■ ■ </code></pre>So in this case you don&#x27;t let the agent move up, only right, or down (it probably came from the left so you don&#x27;t let it go back that way or it will enter a military oscillation: right-left-right-left-right... ). In a similar way you can avoid looping (it gets a bit complicated but you can find the logic in my comments in maze_generator.pl linked above).<p>Then it&#x27;s a matter of moving through a fully-blocked initial grid cell-by-cell and laying down &quot;observation matrices&quot; at random, while respecting the anti-plaza and anti-looping constraints. You have to restart the process from a wall cell in a &quot;hunt-and-kill&quot; fashion every time it reaches a dead end to complete the maze but you get mazes that look like this (for a 40 × 40 maze):<p><pre><code>  □ ■ □ □ □ □ ■ ■ □ □ □ ■ ■ ■ ■ □ □ □ ■ □ □ □ □ □ □ □ □ ■ ■ □ □ □ □ □ ■ □ □ □ □ □   □ ■ □ ■ ■ □ ■ □ □ ■ □ □ ■ ■ □ □ ■ □ □ □ ■ ■ ■ ■ ■ ■ □ ■ □ □ ■ ■ ■ □ ■ □ ■ ■ □ ■   □ ■ □ ■ ■ □ □ □ ■ ■ ■ □ ■ □ □ ■ ■ ■ □ ■ ■ □ □ □ □ ■ □ □ □ ■ ■ □ ■ □ ■ ■ ■ □ □ □   □ ■ □ □ ■ □ ■ ■ ■ □ ■ □ ■ □ ■ ■ □ ■ □ ■ □ □ ■ ■ □ ■ ■ ■ ■ ■ □ □ ■ □ □ ■ □ □ ■ □   □ ■ ■ □ ■ ■ ■ □ □ □ ■ □ □ □ ■ ■ □ ■ □ ■ ■ □ □ ■ ■ ■ □ □ □ ■ □ ■ ■ ■ □ □ □ ■ ■ □   □ ■ ■ □ □ ■ □ □ ■ □ ■ ■ ■ □ □ □ □ ■ □ □ ■ ■ □ □ ■ ■ □ ■ □ □ □ □ ■ ■ ■ ■ ■ ■ ■ □   □ □ ■ ■ □ ■ □ ■ ■ □ □ □ ■ ■ ■ ■ ■ ■ ■ □ □ ■ ■ □ □ ■ ■ ■ ■ □ ■ □ □ □ □ □ ■ ■ ■ □   ■ □ □ ■ □ □ □ ■ ■ ■ ■ □ □ ■ ■ □ □ □ ■ ■ □ □ ■ ■ □ □ ■ ■ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ □   ■ ■ □ ■ ■ ■ □ ■ □ □ ■ ■ □ ■ □ □ ■ □ ■ ■ ■ □ □ ■ ■ □ □ ■ □ ■ ■ ■ □ □ ■ ■ □ ■ □ □   □ □ □ □ □ □ □ ■ ■ □ □ □ □ ■ □ ■ ■ □ ■ □ ■ ■ □ □ ■ ■ □ ■ □ □ □ ■ □ ■ ■ □ □ □ □ ■   □ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ □ ■ □ □ ■ ■ □ □ ■ □ ■ ■ ■ □ □ □ ■ ■ ■ ■ ■ ■ ■   □ ■ ■ □ □ □ □ □ ■ □ □ □ □ ■ E ■ ■ □ ■ ■ □ □ ■ ■ □ ■ □ □ ■ ■ ■ ■ □ □ ■ ■ □ ■ □ □   □ ■ □ □ ■ ■ ■ □ □ □ ■ ■ □ ■ □ ■ ■ □ ■ ■ ■ □ □ ■ □ ■ ■ □ □ □ ■ ■ ■ □ □ ■ □ □ □ ■   □ ■ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ □ □ □ ■ □ □ □ ■ ■ □ □ □ □ ■ ■ ■ □ □ □ ■ ■ □ ■ ■ □ ■ ■   ■ ■ □ ■ □ ■ ■ □ □ □ □ ■ ■ ■ ■ ■ ■ □ ■ □ □ □ □ ■ ■ ■ ■ ■ □ □ ■ □ ■ ■ □ □ □ □ □ □   □ □ □ ■ □ □ □ □ ■ □ ■ ■ ■ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ □ □ ■ ■ □ □ ■ ■ ■ ■ ■ ■ □   □ ■ ■ ■ □ ■ ■ ■ ■ □ □ ■ □ □ ■ □ □ ■ □ □ □ ■ ■ □ □ □ □ □ ■ ■ ■ ■ □ □ □ □ ■ ■ ■ □   □ ■ □ ■ □ □ ■ □ ■ ■ □ □ □ ■ ■ ■ □ □ □ ■ □ ■ □ □ ■ □ ■ ■ ■ □ □ ■ □ ■ ■ □ □ ■ □ □   □ ■ □ ■ ■ □ □ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ □ ■ ■ □ □ ■ ■ ■ □ ■ □ ■ ■ ■ □ ■ □ ■   □ ■ □ □ ■ ■ ■ □ □ □ ■ □ □ ■ ■ □ □ ■ ■ □ □ ■ □ □ ■ ■ □ □ ■ ■ □ □ □ □ □ ■ □ ■ □ □   □ ■ ■ □ □ □ ■ □ ■ □ □ □ ■ ■ □ □ ■ ■ □ □ ■ ■ ■ □ □ ■ ■ □ □ ■ ■ ■ ■ ■ □ ■ □ ■ ■ □   ■ ■ ■ ■ □ ■ ■ ■ ■ ■ ■ □ ■ □ □ ■ ■ ■ □ ■ ■ ■ ■ ■ □ □ ■ ■ □ □ □ □ □ ■ □ ■ □ ■ □ □   □ □ ■ ■ □ ■ □ □ □ □ ■ □ □ □ ■ ■ ■ □ □ □ ■ ■ ■ ■ ■ □ □ ■ ■ ■ ■ ■ □ ■ ■ ■ □ ■ □ ■   ■ □ □ □ □ ■ □ ■ ■ □ ■ ■ ■ □ □ □ ■ ■ ■ □ □ □ □ □ ■ ■ □ □ ■ □ □ ■ □ □ ■ ■ □ ■ □ ■   ■ ■ □ ■ □ ■ □ □ ■ □ □ □ ■ ■ ■ □ ■ □ ■ ■ ■ □ ■ □ □ ■ ■ □ □ □ ■ ■ ■ □ □ ■ ■ ■ □ □   □ □ □ ■ ■ ■ ■ □ ■ ■ ■ □ □ □ ■ □ □ □ □ □ ■ □ ■ ■ S □ ■ ■ ■ □ □ □ ■ ■ □ □ □ ■ ■ □   □ ■ ■ ■ ■ □ □ □ ■ □ ■ ■ □ ■ ■ ■ ■ ■ ■ □ ■ □ ■ ■ ■ □ □ □ ■ ■ ■ □ ■ ■ ■ ■ □ □ □ □   □ ■ ■ □ □ □ ■ ■ ■ □ □ ■ □ □ □ □ □ □ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ ■ □ □ □ ■ ■ □ ■ ■ ■   □ ■ □ □ ■ ■ ■ □ □ □ ■ ■ ■ □ ■ ■ ■ □ ■ □ ■ ■ □ ■ ■ □ ■ □ □ □ ■ ■ ■ □ □ ■ ■ ■ ■ □   □ ■ □ ■ ■ □ ■ ■ □ ■ ■ □ ■ □ ■ □ ■ ■ ■ □ ■ □ □ □ ■ □ ■ □ ■ □ □ ■ ■ ■ □ □ ■ ■ □ □   □ ■ □ □ ■ □ ■ ■ □ ■ ■ □ □ □ □ □ ■ □ □ □ ■ ■ ■ □ ■ ■ ■ □ ■ ■ □ □ ■ ■ ■ □ □ ■ □ ■   □ ■ ■ □ □ □ ■ □ □ □ ■ ■ ■ ■ ■ □ □ □ ■ ■ ■ □ ■ □ □ □ ■ □ □ ■ ■ □ ■ □ ■ ■ □ ■ □ ■   □ □ ■ ■ ■ □ ■ □ ■ □ □ ■ □ □ ■ ■ ■ ■ ■ □ □ □ ■ □ ■ □ ■ ■ □ □ ■ □ ■ □ ■ ■ □ ■ □ □   ■ □ □ □ ■ □ □ □ ■ ■ □ ■ ■ □ ■ □ ■ □ □ □ ■ □ ■ ■ ■ □ □ ■ ■ □ ■ □ □ □ ■ ■ □ ■ ■ □   ■ ■ □ ■ ■ ■ ■ ■ ■ ■ □ □ □ □ ■ □ □ □ ■ ■ ■ □ □ ■ ■ ■ □ □ ■ ■ ■ □ ■ □ □ ■ □ □ ■ □   ■ ■ □ □ □ □ □ □ □ ■ ■ ■ ■ □ ■ ■ □ ■ ■ □ ■ ■ □ □ □ ■ ■ □ □ □ ■ ■ ■ ■ □ ■ ■ □ □ □   ■ ■ □ ■ □ ■ ■ ■ □ □ □ □ ■ □ □ □ □ ■ □ □ □ ■ ■ ■ □ □ ■ ■ ■ □ □ ■ ■ □ □ □ ■ ■ ■ □   ■ □ □ ■ □ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ □ ■ ■ ■ □ ■ ■ □ □ □ ■ ■ □ □ ■ ■ ■ ■ ■ □ ■ □   □ □ ■ ■ □ □ ■ □ □ □ ■ ■ □ □ □ □ ■ ■ □ ■ □ □ □ ■ ■ □ ■ □ □ ■ ■ □ □ ■ ■ □ □ □ ■ □   □ ■ ■ ■ ■ □ □ □ ■ □ □ □ □ ■ ■ □ □ □ □ □ □ ■ □ □ □ □ ■ ■ □ □ ■ ■ □ □ □ □ ■ □ □ □ </code></pre>Oh and you randomly place the S[tart] and E[nd] tiles of course. And you know generated mazes are always solvable because you solve them to generate them (like with DFS etc).<p>But note that in the maps you get this way there are blocked-out regions, &quot;clumps&quot; of wall tiles. There may be a better set of constraints that gets rid of those, but the result was good enough for my needs and I didn&#x27;t bother.<p>And of course you can use the same technique to solve a maze and even do a bit of SLAM (Simultaneous Localisation and Mapping) by placing observation matrices in an expanding grid as the agent moves in an initially unseen map.  OK, TMI, I&#x27;m stopping here."
    },
    {
      "id": 41348602,
      "lvl": 2,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-25T16:30:57",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "this is awesome!  and the maze it produced looks great!  yeah, the halving-dimensions thing is a form of what i did in the golang thing i linked<p>i&#x27;m pretty comfortable with prolog, and i&#x27;ll take a look at your code later :)"
    },
    {
      "id": 41348664,
      "lvl": 3,
      "user": {
        "link": "https://news.ycombinator.com/user?id=YeGoblynQueenne",
        "name": "YeGoblynQueenne"
      },
      "date": "2024-08-25T16:36:21",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "Oh, right, of course you are! I thought I recognised your username :)"
    },
    {
      "id": 41342674,
      "lvl": 0,
      "user": {
        "link": "https://news.ycombinator.com/user?id=kragen",
        "name": "kragen"
      },
      "date": "2024-08-24T23:15:28",
      "onstory": {
        "name": "Against all odds, an asteroid mining company appea...",
        "link": "https://news.ycombinator.com/item?id=41338000"
      },
      "text": "the idea is actually workable, it just isn&#x27;t competitive with other ways of exploiting solar energy"
    },
    {
      "id": 41353267,
      "lvl": 1,
      "user": {
        "link": "https://news.ycombinator.com/user?id=marcosdumay",
        "name": "marcosdumay"
      },
      "date": "2024-08-26T01:46:43",
      "onstory": {
        "name": "",
        "link": null
      },
      "text": "It has some really serious drawbacks, like needing to repeatedly synchroniz"
    }
  ],
  "favorites": [
    {
      "id": 40797969,
      "link": "https://nondeterministic.computer/@mjg59/112679109895486477",
      "title": "Matthew Garrett: &quot;Quick Assange frequent misconceptions thread&quot;",
      "score": 31,
      "date": "2024-06-26T09:11:13",
      "user": {
        "link": "https://news.ycombinator.com/user?id=Tomte",
        "name": "Tomte"
      },
      "comments_count": 26,
      "comments_link": "https://news.ycombinator.com/item?id=40797969",
      "text": ""
    },
    {
      "id": 35017120,
      "link": "https://www.thetimes.co.uk/article/roald-dahl-collection-books-changes-text-puffin-uk-2023-rm2622vl0",
      "title": "Roald Dahl ebooks remotely updated to censored versions after purchase",
      "score": 420,
      "date": "2023-03-04T01:12:57",
      "user": {
        "link": "https://news.ycombinator.com/user?id=nhchris",
        "name": "nhchris"
      },
      "comments_count": 364,
      "comments_link": "https://news.ycombinator.com/item?id=35017120",
      "text": ""
    },
    {
      "id": 33829778,
      "link": "https://www.EmbeddedRelated.com/showarticle/1033.php",
      "title": "Zebras hate you for no reason: Why Amdahl&#x27;s law is misleading (2017)",
      "score": 87,
      "date": "2022-12-02T12:44:46",
      "user": {
        "link": "https://news.ycombinator.com/user?id=jacquesm",
        "name": "jacquesm"
      },
      "comments_count": 45,
      "comments_link": "https://news.ycombinator.com/item?id=33829778",
      "text": ""
    },
    {
      "id": 30141460,
      "link": "https://royalsociety.org/news/2022/01/scientific-misinformation-report/",
      "title": "Royal Society cautions against censorship of scientific misinformation online",
      "score": 1016,
      "date": "2022-01-30T21:47:10",
      "user": {
        "link": "https://news.ycombinator.com/user?id=steelstraw",
        "name": "steelstraw"
      },
      "comments_count": 926,
      "comments_link": "https://news.ycombinator.com/item?id=30141460",
      "text": ""
    },
    {
      "id": 30128740,
      "link": "https://man.fas.org/smedley.htm",
      "title": "War Is a Racket (1933)",
      "score": 287,
      "date": "2022-01-29T18:11:25",
      "user": {
        "link": "https://news.ycombinator.com/user?id=johnny313",
        "name": "johnny313"
      },
      "comments_count": 217,
      "comments_link": "https://news.ycombinator.com/item?id=30128740",
      "text": ""
    },
    {
      "id": 29697780,
      "link": "https://www.medrxiv.org/content/10.1101/2021.12.23.21268276v1.full.pdf",
      "title": "Risk of myocarditis following sequential COVID-19 vaccinations by age and sex [pdf]",
      "score": 190,
      "date": "2021-12-27T00:34:37",
      "user": {
        "link": "https://news.ycombinator.com/user?id=busymom0",
        "name": "busymom0"
      },
      "comments_count": 194,
      "comments_link": "https://news.ycombinator.com/item?id=29697780",
      "text": ""
    },
    {
      "id": 29564300,
      "link": "https://www.macrumors.com/2021/12/15/apple-nixes-csam-references-website/",
      "title": "Apple removes references to CSAM  from its child safety webpage",
      "score": 390,
      "date": "2021-12-15T11:01:40",
      "user": {
        "link": "https://news.ycombinator.com/user?id=virgildotcodes",
        "name": "virgildotcodes"
      },
      "comments_count": 393,
      "comments_link": "https://news.ycombinator.com/item?id=29564300",
      "text": ""
    },
    {
      "id": 29069928,
      "link": "https://www.strangeloopcanon.com/p/two-stories-about-tacit-knowledge",
      "title": "Two stories about tacit knowledge",
      "score": 114,
      "date": "2021-11-01T17:28:36",
      "user": {
        "link": "https://news.ycombinator.com/user?id=Wildgoose",
        "name": "Wildgoose"
      },
      "comments_count": 41,
      "comments_link": "https://news.ycombinator.com/item?id=29069928",
      "text": ""
    },
    {
      "id": 28877303,
      "link": "https://www.lightbluetouchpaper.org/2021/10/15/bugs-in-our-pockets/",
      "title": "Bugs in Our Pockets?",
      "score": 85,
      "date": "2021-10-15T13:11:12",
      "user": {
        "link": "https://news.ycombinator.com/user?id=etiam",
        "name": "etiam"
      },
      "comments_count": 21,
      "comments_link": "https://news.ycombinator.com/item?id=28877303",
      "text": ""
    },
    {
      "id": 28259271,
      "link": "https://www.eff.org/deeplinks/2021/08/eff-joins-global-coalition-asking-apple-ceo-tim-cook-stop-phone-scanning",
      "title": "EFF Joins Global Coalition Asking Apple CEO Tim Cook to Stop Phone-Scanning",
      "score": 549,
      "date": "2021-08-21T18:23:57",
      "user": {
        "link": "https://news.ycombinator.com/user?id=DiabloD3",
        "name": "DiabloD3"
      },
      "comments_count": 209,
      "comments_link": "https://news.ycombinator.com/item?id=28259271",
      "text": ""
    },
    {
      "id": 28225706,
      "link": "https://www.vice.com/en/article/wx5yzq/apple-defends-its-anti-child-abuse-imagery-tech-after-claims-of-hash-collisions",
      "title": "Apple defends anti-child abuse imagery tech after claims of ‘hash collisions’",
      "score": 361,
      "date": "2021-08-18T19:01:32",
      "user": {
        "link": "https://news.ycombinator.com/user?id=nickthegreek",
        "name": "nickthegreek"
      },
      "comments_count": 450,
      "comments_link": "https://news.ycombinator.com/item?id=28225706",
      "text": ""
    },
    {
      "id": 28172269,
      "link": "https://www.bbc.com/news/technology-58206543",
      "title": "Apple Regrets Confusion over &#x27;iPhone Scanning&#x27;",
      "score": 585,
      "date": "2021-08-13T18:07:04",
      "user": {
        "link": "https://news.ycombinator.com/user?id=belter",
        "name": "belter"
      },
      "comments_count": 734,
      "comments_link": "https://news.ycombinator.com/item?id=28172269",
      "text": ""
    },
    {
      "id": 28166663,
      "link": "https://github.com/emilk/egui",
      "title": "Egui: An easy-to-use immediate mode GUI",
      "score": 366,
      "date": "2021-08-13T08:13:12",
      "user": {
        "link": "https://news.ycombinator.com/user?id=ducktective",
        "name": "ducktective"
      },
      "comments_count": 141,
      "comments_link": "https://news.ycombinator.com/item?id=28166663",
      "text": ""
    },
    {
      "id": 28162412,
      "link": "https://www.reuters.com/technology/exclusive-apples-child-protection-features-spark-concern-within-its-own-ranks-2021-08-12/",
      "title": "Apple&#x27;s child protection features spark concern within its own ranks: sources",
      "score": 1778,
      "date": "2021-08-12T22:26:42",
      "user": {
        "link": "https://news.ycombinator.com/user?id=spenvo",
        "name": "spenvo"
      },
      "comments_count": 813,
      "comments_link": "https://news.ycombinator.com/item?id=28162412",
      "text": ""
    },
    {
      "id": 28160673,
      "link": "https://piotr.is/2021/08/12/apple-csam/",
      "title": "The deceptive PR behind Apple’s “expanded protections for children”",
      "score": 753,
      "date": "2021-08-12T19:52:25",
      "user": {
        "link": "https://news.ycombinator.com/user?id=arespredator",
        "name": "arespredator"
      },
      "comments_count": 571,
      "comments_link": "https://news.ycombinator.com/item?id=28160673",
      "text": ""
    },
    {
      "id": 28149805,
      "link": "https://www.eff.org/deeplinks/2021/08/if-you-build-it-they-will-come-apple-has-opened-backdoor-increased-surveillance",
      "title": "Apple Has Opened the Backdoor to Increased Surveillance and Censorship",
      "score": 618,
      "date": "2021-08-11T23:58:18",
      "user": {
        "link": "https://news.ycombinator.com/user?id=taxyovio",
        "name": "taxyovio"
      },
      "comments_count": 303,
      "comments_link": "https://news.ycombinator.com/item?id=28149805",
      "text": ""
    },
    {
      "id": 28115343,
      "link": "https://www.patrick-breyer.de/en/posts/message-screening/?lang=en",
      "title": "Messaging and chat control",
      "score": 643,
      "date": "2021-08-09T11:26:12",
      "user": {
        "link": "https://news.ycombinator.com/user?id=kristjank",
        "name": "kristjank"
      },
      "comments_count": 317,
      "comments_link": "https://news.ycombinator.com/item?id=28115343",
      "text": ""
    },
    {
      "id": 28118452,
      "link": "https://ar.al/2021/08/08/apple-is-trying-to-redefine-what-it-means-to-violate-your-privacy-we-must-not-let-it/",
      "title": "Apple wants to redefine what it means to violate your privacy. We mustn’t let it",
      "score": 162,
      "date": "2021-08-09T15:55:32",
      "user": {
        "link": "https://news.ycombinator.com/user?id=aral",
        "name": "aral"
      },
      "comments_count": 79,
      "comments_link": "https://news.ycombinator.com/item?id=28118452",
      "text": ""
    },
    {
      "id": 28110956,
      "link": "https://gavinhoward.com/2021/08/the-slippery-slope-is-not-a-fallacy-apple-and-csam-and-how-to-defend-against-presumers/",
      "title": "The Slippery Slope Is Not a Fallacy",
      "score": 58,
      "date": "2021-08-08T22:56:07",
      "user": {
        "link": "https://news.ycombinator.com/user?id=gavinhoward",
        "name": "gavinhoward"
      },
      "comments_count": 11,
      "comments_link": "https://news.ycombinator.com/item?id=28110956",
      "text": ""
    },
    {
      "id": 28105966,
      "link": "https://www.sciencemag.org/news/2021/08/major-uk-science-funder-require-grantees-make-papers-immediately-free-all",
      "title": "Major U.K. science funder to require grantees to make papers immediately free",
      "score": 761,
      "date": "2021-08-08T11:31:37",
      "user": {
        "link": "https://news.ycombinator.com/user?id=cyrksoft",
        "name": "cyrksoft"
      },
      "comments_count": 92,
      "comments_link": "https://news.ycombinator.com/item?id=28105966",
      "text": ""
    },
    {
      "id": 28110159,
      "link": "https://www.hackerfactor.com/blog/index.php?/archives/929-One-Bad-Apple.html",
      "title": "One Bad Apple",
      "score": 1484,
      "date": "2021-08-08T21:12:41",
      "user": {
        "link": "https://news.ycombinator.com/user?id=cwmartin",
        "name": "cwmartin"
      },
      "comments_count": 524,
      "comments_link": "https://news.ycombinator.com/item?id=28110159",
      "text": ""
    },
    {
      "id": 28091750,
      "link": "https://rentafounder.com/the-problem-with-perceptual-hashes/",
      "title": "The Problem with Perceptual Hashes",
      "score": 705,
      "date": "2021-08-06T19:29:18",
      "user": {
        "link": "https://news.ycombinator.com/user?id=rivo",
        "name": "rivo"
      },
      "comments_count": 418,
      "comments_link": "https://news.ycombinator.com/item?id=28091750",
      "text": ""
    },
    {
      "id": 23386630,
      "link": "https://eugeneyan.com/2020/04/05/note-taking-zettelkasten/",
      "title": "Stop Taking Regular Notes; Use a Zettelkasten Instead",
      "score": 785,
      "date": "2020-06-02T02:23:03",
      "user": {
        "link": "https://news.ycombinator.com/user?id=7d7n",
        "name": "7d7n"
      },
      "comments_count": 300,
      "comments_link": "https://news.ycombinator.com/item?id=23386630",
      "text": ""
    },
    {
      "id": 20930986,
      "link": "http://www.dustmop.io/blog/2019/09/10/what-remains-technical-breakdown/",
      "title": "Technical Breakdown of a new NES game written in Lisp",
      "score": 317,
      "date": "2019-09-10T17:46:11",
      "user": {
        "link": "https://news.ycombinator.com/user?id=dustmop",
        "name": "dustmop"
      },
      "comments_count": 69,
      "comments_link": "https://news.ycombinator.com/item?id=20930986",
      "text": ""
    }
  ]
}
